{"version":3,"sources":["./src/app/modules/admin-panel/pages/proyectos/proyectos.component.ts","./src/app/modules/admin-panel/pages/proyectos/proyectos.component.html","./src/app/modules/admin-panel/pages/proyectos/proyectos.module.ts","./src/app/modules/admin-panel/pages/proyectos/proyectos-routing.module.ts"],"names":[],"mappings":"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","file":"pages-proyectos-proyectos-module.js","sourcesContent":["import { Component, Host, HostBinding, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport Swal, { SweetAlertResult } from 'sweetalert2';\r\nimport {\r\n  AllUsersRes,\r\n  FullUser,\r\n  Project,\r\n} from '../../interfaces/users.interface';\r\nimport { CuerpoTabla } from '../../interfaces/tabla.interface';\r\nimport { AdminPanelCrudService } from '../../services/admin-panel-crud.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { UsersService } from '../../services/users.service';\r\nimport {\r\n  alertFailureOrSuccessOnCRUDAction,\r\n  noConnectionAlert,\r\n  unknownErrorAlert,\r\n} from '../../../../helpers/alerts';\r\n\r\ntype UserSelectData = Pick<\r\n  FullUser,\r\n  'id' | 'first_name' | 'last_name' | 'email'\r\n>;\r\n\r\n@Component({\r\n  selector: 'app-proyectos',\r\n  templateUrl: './proyectos.component.html',\r\n  styleUrls: ['./proyectos.component.scss'],\r\n})\r\nexport class ProyectosComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class.admin-panel-container') someClass: Host = true;\r\n\r\n  public selectData: UserSelectData[] = [];\r\n  public projects: Project[] = [];\r\n  public tableData: CuerpoTabla[] = [];\r\n  public encabezadosTabla: string[] = [\r\n    'Nombre del proyecto',\r\n    'Anotaciones',\r\n    'Total',\r\n    'Debe',\r\n    'Cashflow',\r\n    'Usuario',\r\n  ];\r\n  public isCreating: boolean = false;\r\n  public isEditing: boolean = false;\r\n  public crudAction: string = '';\r\n  public proyectForm!: FormGroup;\r\n  public fileToUpload: File | null = null;\r\n  public acceptedFileTypes: boolean = true;\r\n  public projectID!: number;\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    private adminPanelCrudService: AdminPanelCrudService,\r\n    private currencyPipe: CurrencyPipe,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private projectService: ProjectsService,\r\n    private usersService: UsersService\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  private createForm(): void {\r\n    this.proyectForm = this.fb.group({\r\n      title: [undefined, [Validators.required, Validators.minLength(6)]],\r\n      description: ['', [Validators.minLength(10)]],\r\n      total: [null, [Validators.required, Validators.min(0)]],\r\n      cashflow: [undefined],\r\n      user: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProyects();\r\n    this.getSelectData();\r\n  }\r\n\r\n  private getSelectData(): void {\r\n    this.usersService\r\n      .getAllUsers()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (res) => {\r\n          res?.data?.forEach((user: FullUser) => {\r\n            const data: UserSelectData = {\r\n              id: user.id,\r\n              email: user.email,\r\n              first_name: user.first_name,\r\n              last_name: user.last_name,\r\n            };\r\n            this.selectData.push(data);\r\n          });\r\n        },\r\n        error: (err) => unknownErrorAlert(err),\r\n      });\r\n  }\r\n\r\n  public formSubmit(): void {\r\n    this.proyectForm.markAllAsTouched();\r\n    if (this.proyectForm.valid) {\r\n      const formData: FormData = new FormData();\r\n      formData.append('title', this.proyectForm.controls.title?.value);\r\n      formData.append('total', this.proyectForm.controls.total?.value);\r\n      formData.append('user', this.proyectForm.controls.user?.value!);\r\n\r\n      this.fileToUpload\r\n        ? formData.append('cashflow', this.fileToUpload!)\r\n        : null;\r\n\r\n      this.proyectForm.controls.description?.value\r\n        ? formData.append(\r\n            'description',\r\n            this.proyectForm.controls.description?.value\r\n          )\r\n        : null;\r\n\r\n      this.crudAction === 'Crear'\r\n        ? this.crearProyectoEnLaDb(formData)\r\n        : this.editarProyectoEnLaDb(formData);\r\n    }\r\n  }\r\n\r\n  public validateCashflowExtension(e: any): void {\r\n    const file: File = e.target?.files[0];\r\n    this.acceptedFileTypes =\r\n      file.type ===\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||\r\n      file.type === 'application/pdf';\r\n\r\n    this.acceptedFileTypes\r\n      ? (this.fileToUpload = file)\r\n      : (this.fileToUpload = null);\r\n  }\r\n\r\n  private getProyects(): void {\r\n    this.projectService\r\n      .getAllProjects()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          if (res?.meta?.status.toString().includes('20')) {\r\n            this.projects = res?.data;\r\n            this.setTableData();\r\n          } else {\r\n            unknownErrorAlert(res);\r\n          }\r\n        },\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  private setTableData(): void {\r\n    this.projects.forEach((proyecto: Project) =>\r\n      this.tableData.push({\r\n        imagen: '../../../../../assets/no-image.png',\r\n        id: proyecto.id,\r\n        item2:\r\n          proyecto.title ||\r\n          `Proyecto usuario: ${proyecto.Users?.first_name} ${proyecto.Users?.last_name}`,\r\n        item3: proyecto.description || '-',\r\n        item4: proyecto.total ? this.setCurrencyFormat(proyecto.total) : 'NULL',\r\n        item6:\r\n          proyecto.balance !== null || proyecto.balance !== undefined\r\n            ? this.setCurrencyFormat(proyecto.balance)\r\n            : 'NULL',\r\n        item7: proyecto.cashflow ? 'Si' : 'No',\r\n        item8: `${proyecto.Users?.first_name} ${proyecto.Users?.last_name}`,\r\n      })\r\n    );\r\n  }\r\n\r\n  private setCurrencyFormat(total: number): string {\r\n    return this.currencyPipe.transform(total, '$')!;\r\n  }\r\n\r\n  public recargarProyectos(recargar: boolean) {\r\n    if (recargar) {\r\n      this.resetsetControls();\r\n      this.tableData = [];\r\n      this.projects = [];\r\n      this.isCreating = false;\r\n      this.isEditing = false;\r\n      this.getProyects();\r\n    }\r\n  }\r\n\r\n  private resetsetControls(): void {\r\n    this.proyectForm.controls.title?.setValue('');\r\n    this.proyectForm.controls.total?.setValue('');\r\n    this.proyectForm.controls.description?.setValue('');\r\n    this.proyectForm.controls.user?.setValue('');\r\n  }\r\n\r\n  public crearProyecto(): void {\r\n    this.crudAction = 'Crear';\r\n    this.isCreating = true;\r\n    this.isEditing = false;\r\n  }\r\n\r\n  public crearProyectoEnLaDb(formData: FormData): void {\r\n    this.adminPanelCrudService\r\n      .create(formData, 'projects')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarProyectos(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'creó', 'proyecto');\r\n        },\r\n        (err) => {\r\n          this.recargarProyectos(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public editarProyecto(id: number): void {\r\n    this.crudAction = 'Editar';\r\n    this.isEditing = true;\r\n    this.isCreating = false;\r\n    const proyecto: Project | undefined = this.projects.find(\r\n      (proj) => proj.id === id\r\n    );\r\n    if (proyecto) {\r\n      this.projectID = id;\r\n      this.proyectForm.controls.title.setValue(proyecto.title);\r\n      this.proyectForm.controls.title.setValue(proyecto.description);\r\n      this.proyectForm.controls.total.setValue(proyecto.total);\r\n      this.proyectForm.controls.user.setValue(proyecto.Users?.id);\r\n    }\r\n  }\r\n\r\n  public editarProyectoEnLaDb(formData: FormData): void {\r\n    this.adminPanelCrudService\r\n      .edit(this.projectID, formData, 'projects')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.recargarProyectos(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'editó', 'proyecto');\r\n        },\r\n        (err) => {\r\n          this.recargarProyectos(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public borrarProyecto(id: number): void {\r\n    Swal.fire({\r\n      title: '¿Seguro querés elimninar el proyecto seleccionado?',\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Si, borrar',\r\n      denyButtonText: `No`,\r\n    }).then((result: SweetAlertResult<any>) => {\r\n      result.isConfirmed ? this.borrarProyectoEnLaDb(id) : null;\r\n    });\r\n  }\r\n\r\n  public borrarProyectoEnLaDb(id: number): void {\r\n    this.adminPanelCrudService\r\n      .delete(id, 'projects')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarProyectos(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'borró', 'proyecto');\r\n        },\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  public addPayment(projectId: number): void {\r\n    this.router.navigateByUrl('/admin/proyectos/payments', {\r\n      state: { id: projectId },\r\n    });\r\n  }\r\n\r\n  public addAsset(projectId: number): void {\r\n    this.router.navigateByUrl('/admin/proyectos/assets', {\r\n      state: { id: projectId },\r\n    });\r\n  }\r\n\r\n  private alertFailureOrSuccess(status: number): void {\r\n    if (status === 200 || status === 201) {\r\n      Swal.fire(\r\n        '¡Excelente!',\r\n        'El proyecto se eliminó correctamente',\r\n        'success'\r\n      );\r\n    } else {\r\n      Swal.fire(\r\n        '¡Lo sentimos!',\r\n        'No pudimos cargar la información, por favor recarga la página',\r\n        'error'\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col\" *ngIf=\"!isEditing && !isCreating\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <app-table\r\n          *ngIf=\"projects && tableData\"\r\n          title=\"Proyectos\"\r\n          [encabezadosTabla]=\"encabezadosTabla\"\r\n          [filasTabla]=\"tableData\"\r\n          [totalSection]=\"projects?.length!\"\r\n          [noImage]=\"true\"\r\n          [addAssets]=\"true\"\r\n          [addPayments]=\"true\"\r\n          (onRecargar)=\"recargarProyectos($event)\"\r\n          (onCreate)=\"crearProyecto()\"\r\n          (onEdit)=\"editarProyecto($event)\"\r\n          (onDelete)=\"borrarProyecto($event)\"\r\n          (onAddPayments)=\"addPayment($event)\"\r\n          (onAddAssets)=\"addAsset($event)\"\r\n        ></app-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col\" *ngIf=\"isCreating || isEditing\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h1 class=\"primary-dark\">{{ crudAction }} Proyecto/s</h1>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form\r\n          class=\"form p-t-20 form-material\"\r\n          [formGroup]=\"proyectForm\"\r\n          (ngSubmit)=\"formSubmit()\"\r\n        >\r\n          <div class=\"card-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"userSelectInput\">Usuario*</label>\r\n                  <select\r\n                    formControlName=\"user\"\r\n                    class=\"form-control custom-select\"\r\n                    id=\"userSelectInput\"\r\n                  >\r\n                    <option [value]=\"null\">--Seleccionar un usuario--</option>\r\n                    <option *ngFor=\"let user of selectData\" [value]=\"user?.id!\">\r\n                      {{\r\n                        user?.first_name! +\r\n                          \" \" +\r\n                          user?.last_name! +\r\n                          \" / email: \" +\r\n                          user?.email!\r\n                      }}\r\n                    </option>\r\n                  </select>\r\n                  <div class=\"p-2\">\r\n                    <span\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        proyectForm.controls.user.errors?.required &&\r\n                        proyectForm.controls.user.touched\r\n                      \"\r\n                      >Este dato es requerido</span\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label *ngIf=\"crudAction === 'Editar'\" for=\"titleInput\"\r\n                    >Título*</label\r\n                  >\r\n                  <div class=\"input-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Título\"\r\n                      formControlName=\"title\"\r\n                      id=\"titleInput\"\r\n                    />\r\n                    <div class=\"p-2\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          proyectForm.controls.title.errors?.required &&\r\n                          proyectForm.controls.title.touched\r\n                        \"\r\n                        >Este campo es requerido</span\r\n                      >\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          proyectForm.controls.title.errors?.minlength &&\r\n                          proyectForm.controls.title.touched\r\n                        \"\r\n                        >Debe tener al menos 6 caracteres</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label\r\n                    *ngIf=\"crudAction === 'Editar'\"\r\n                    for=\"descriptionTextArea\"\r\n                    >Descripción</label\r\n                  >\r\n                  <div class=\"input-group\">\r\n                    <textarea\r\n                      class=\"form-control\"\r\n                      id=\"descriptionTextArea\"\r\n                      placeholder=\"Descripción\"\r\n                      formControlName=\"description\"\r\n                      cols=\"30\"\r\n                      rows=\"5\"\r\n                    ></textarea>\r\n                    <div class=\"p-2\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          proyectForm.controls.description.errors?.minlength &&\r\n                          proyectForm.controls.description.touched\r\n                        \"\r\n                        >Debe tener al menos 10 caracteres</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label *ngIf=\"crudAction === 'Editar'\" for=\"totalInput\"\r\n                    >Total*</label\r\n                  >\r\n                  <div class=\"input-group\">\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Total\"\r\n                      formControlName=\"total\"\r\n                      id=\"totalInput\"\r\n                    />\r\n                    <div class=\"p-2\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          proyectForm.controls.total.errors?.required &&\r\n                          proyectForm.controls.total.touched\r\n                        \"\r\n                        >Este campo es requerido</span\r\n                      >\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          proyectForm.controls.total.errors?.min &&\r\n                          proyectForm.controls.total.touched\r\n                        \"\r\n                        >El valor debe ser mayor a 0</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label *ngIf=\"crudAction === 'Editar'\" for=\"cashFlowInput\"\r\n                    >Cashflow</label\r\n                  >\r\n                  <div class=\"input-group\">\r\n                    <input\r\n                      type=\"file\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Cashflow\"\r\n                      formControlName=\"cashflow\"\r\n                      id=\"cashFlowInput\"\r\n                      (change)=\"validateCashflowExtension($event)\"\r\n                    />\r\n                    <div class=\"p-2\">\r\n                      <span class=\"text-danger\" *ngIf=\"!acceptedFileTypes\"\r\n                        >Los formatos aceptados son PDF o XLSX</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-success waves-effect waves-light m-r-10 bgc-primary-dark\"\r\n            >\r\n              Confirmar\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              (click)=\"recargarProyectos(true)\"\r\n              class=\"btn btn-danger waves-effect waves-light m-r-10\"\r\n            >\r\n              Volver\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, CurrencyPipe } from '@angular/common';\r\n\r\nimport { ProyectosRoutingModule } from './proyectos-routing.module';\r\nimport { ProyectosComponent } from './proyectos.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ComponentsModule } from '../../components/components.module';\r\n\r\n@NgModule({\r\n  declarations: [ProyectosComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ProyectosRoutingModule,\r\n    ReactiveFormsModule,\r\n    ComponentsModule,\r\n  ],\r\n  providers: [CurrencyPipe],\r\n})\r\nexport class ProyectosModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProyectosComponent } from './proyectos.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProyectosComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProyectosRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}