{"version":3,"sources":["./src/app/modules/main/pages/trabajos-realizados/trabajos-realizados-routing.module.ts","./src/app/modules/admin-panel/pages/trabajos-realizados/trabajos-realizados.component.ts","./src/app/modules/admin-panel/pages/trabajos-realizados/trabajos-realizados.component.html","./src/app/modules/admin-panel/pages/trabajos-realizados/trabajos-realizados.module.ts","./src/app/modules/admin-panel/pages/trabajos-realizados/trabajos-realizados-routing.module.ts","./src/app/modules/main/pages/trabajos-realizados/trabajos-realizados.module.ts","./src/app/modules/main/pages/trabajos-realizados/trabajos-realizados.component.ts","./src/app/modules/main/pages/trabajos-realizados/trabajos-realizados.component.html"],"names":[],"mappings":"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","file":"pages-trabajos-realizados-trabajos-realizados-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TrabajosRealizadosComponent } from './trabajos-realizados.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TrabajosRealizadosComponent\r\n  },\r\n  {\r\n    path: ':idTipoTrabajo',\r\n    loadChildren: () => import('./tipo-trabajo/tipo-trabajo.module').then(m => m.TipoTrabajoModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TrabajosRealizadosRoutingModule { }\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  HostBinding,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport {\r\n  Job,\r\n  JobMoreInfo,\r\n  TypesOfJobs,\r\n  TypesOfJobsData,\r\n} from 'src/app/modules/main/interfaces/http/jobs.interface';\r\nimport { CuerpoTabla } from '../../interfaces/tabla.interface';\r\nimport { HttpService } from '../../../../services/http.service';\r\nimport { takeUntil, finalize } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal, { SweetAlertResult } from 'sweetalert2';\r\nimport { AdminPanelCrudService } from '../../services/admin-panel-crud.service';\r\nimport {\r\n  noConnectionAlert,\r\n  unknownErrorAlert,\r\n  alertFailureOrSuccessOnCRUDAction,\r\n  customMessageAlert,\r\n} from '../../../../helpers/alerts';\r\n\r\n@Component({\r\n  selector: 'app-trabajos-realizados',\r\n  templateUrl: './trabajos-realizados.component.html',\r\n  styleUrls: ['./trabajos-realizados.component.scss'],\r\n})\r\nexport class TrabajosRealizadosComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class.admin-panel-container') someClass: Host = true;\r\n  @ViewChild('imageInput') imageInput!: ElementRef<HTMLInputElement>;\r\n\r\n  public encabezadosTabla: string[] = [\r\n    'Título',\r\n    'Descripción',\r\n    'Tipo de trabajo',\r\n  ];\r\n  public tableData: CuerpoTabla[] = [];\r\n  public jobForm!: FormGroup;\r\n  public isCreating: boolean = false;\r\n  public isEditing: boolean = false;\r\n  public crudAction: string = '';\r\n  public imageToShow: string[] = ['../../../../../assets/no-image.png'];\r\n  public fileToUpload: File[] = [];\r\n  public acceptedFileTypes: boolean = true;\r\n  public categoriaDeTrabajo: TypesOfJobsData[] = [];\r\n  public trabajoID!: number;\r\n  public creationImageError: string = '';\r\n\r\n  private jobs: JobMoreInfo[] = [];\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    private httpSrv: HttpService,\r\n    private adminPanelCrudService: AdminPanelCrudService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  private createForm() {\r\n    this.jobForm = this.fb.group({\r\n      type: [null, Validators.required],\r\n      title: ['', Validators.minLength(6)],\r\n      description: ['', Validators.minLength(10)],\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  public openInput(): void {\r\n    this.imageInput.nativeElement.click();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTrabajos();\r\n  }\r\n\r\n  public formSubmit(): void {\r\n    this.jobForm.markAllAsTouched();\r\n\r\n    if (this.crudAction === 'Crear' && !this.jobForm.controls.image.value) {\r\n      this.creationImageError = 'La imágen es obligatoria';\r\n      return;\r\n    }\r\n\r\n    if (this.jobForm.valid) {\r\n      const formData: FormData = new FormData();\r\n      formData.append('title', this.jobForm.controls.title?.value);\r\n      formData.append('description', this.jobForm.controls.description?.value);\r\n      formData.append('type', this.jobForm.controls.type?.value);\r\n      if (this.fileToUpload?.length) {\r\n        this.fileToUpload.forEach((file) => {\r\n          this.fileToUpload && formData.append('image', file);\r\n        });\r\n      }\r\n      this.crudAction === 'Crear'\r\n        ? this.crearTrabajoEnLaDb(formData)\r\n        : this.editarTrabajoEnLaDb(formData);\r\n    }\r\n  }\r\n\r\n  public async showSelectedImage(e: any): Promise<void> {\r\n    if (this.crudAction === 'Crear' && !this.jobForm.controls.image.value) {\r\n      this.creationImageError = 'La imágen es obligatoria';\r\n      return;\r\n    } else {\r\n      this.creationImageError = '';\r\n    }\r\n\r\n    let files = Array.from(e.target?.files as FileList);\r\n\r\n    files = await this.checkAmountOfFiles(files);\r\n\r\n    this.acceptedFileTypes = await this.checkFilesType(files);\r\n\r\n    if (files.length && this.acceptedFileTypes) {\r\n      this.imageToShow = [];\r\n      this.fileToUpload = files;\r\n      this.fileToUpload.forEach((file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => this.imageToShow.push(reader.result as string);\r\n      });\r\n    } else {\r\n      this.fileToUpload = [];\r\n      this.imageToShow = ['../../../../../assets/no-image.png'];\r\n    }\r\n  }\r\n\r\n  private checkAmountOfFiles(files: File[]): Promise<File[]> {\r\n    return new Promise((resolve) => {\r\n      if (files.length > 10) {\r\n        customMessageAlert(\r\n          'Atención',\r\n          'No se pueden subir más de 10 imágenes',\r\n          'OK',\r\n          'info'\r\n        );\r\n        files = files.slice(0, 10);\r\n      }\r\n      resolve(files);\r\n    });\r\n  }\r\n\r\n  private checkFilesType(files: File[]): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      let validator: boolean | 'valido' = 'valido';\r\n      files.forEach((file) => {\r\n        if (\r\n          file.type.includes('image/jpg') ||\r\n          file.type.includes('image/jpeg') ||\r\n          file.type.includes('image/png')\r\n        ) {\r\n        } else {\r\n          validator = false;\r\n        }\r\n      });\r\n      validator === 'valido' ? resolve(true) : resolve(false);\r\n    });\r\n  }\r\n\r\n  private getTrabajos(): void {\r\n    this.httpSrv\r\n      .getTypesOfJob()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((typesOfJobs: TypesOfJobs) => {\r\n        for (const typeOfJob of typesOfJobs.data) {\r\n          this.categoriaDeTrabajo.push(typeOfJob);\r\n          this.httpSrv\r\n            .getOneTypeOfJob(typeOfJob.id.toString())\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(\r\n              (job: Job) => {\r\n                job.meta.status.toString().includes('20')\r\n                  ? this.setTableData(job)\r\n                  : unknownErrorAlert(job);\r\n              },\r\n              (err) => noConnectionAlert(err)\r\n            );\r\n        }\r\n      });\r\n  }\r\n\r\n  private setTableData(job: Job): void {\r\n    job?.data?.Jobs.forEach((j) => {\r\n      this.tableData.push({\r\n        imagen: `${environment.API_IMAGE_URL}/${j.image}`,\r\n        item2: j.title ? j.title : 'Vacío',\r\n        item3: j.description ? j.description : 'Vacío',\r\n        item4: job.data.title,\r\n        id: j.id,\r\n      });\r\n      this.jobs.push(j);\r\n    });\r\n  }\r\n\r\n  public recargarTrabajos(recargar: boolean): void {\r\n    if (recargar) {\r\n      this.resetsetControls();\r\n      this.tableData = [];\r\n      this.categoriaDeTrabajo = [];\r\n      this.fileToUpload = [];\r\n      this.jobs = [];\r\n      this.isCreating = false;\r\n      this.isEditing = false;\r\n      this.getTrabajos();\r\n    }\r\n  }\r\n\r\n  private resetsetControls(): void {\r\n    this.jobForm.controls.title.setValue('');\r\n    this.jobForm.controls.description.setValue('');\r\n    this.jobForm.controls.type.setValue('');\r\n    this.jobForm.controls.image.setValue('');\r\n    this.imageToShow = ['../../../../../assets/no-image.png'];\r\n  }\r\n\r\n  public crearTrabajoRealizado(): void {\r\n    this.crudAction = 'Crear';\r\n    this.isCreating = true;\r\n    this.isEditing = false;\r\n  }\r\n\r\n  private crearTrabajoEnLaDb(formData: FormData) {\r\n    this.adminPanelCrudService\r\n      .create(formData, 'jobs')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarTrabajos(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'creó', 'trabajo realizado');\r\n        },\r\n        (err) => {\r\n          this.recargarTrabajos(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public editarTrabajoRealizado(id: number): void {\r\n    this.crudAction = 'Editar';\r\n    this.isEditing = true;\r\n    this.isCreating = false;\r\n    const trabajo = this.jobs?.find((job) => job.id === id);\r\n    if (trabajo) {\r\n      this.trabajoID = trabajo.id;\r\n      this.jobForm.controls.title.setValue(trabajo.title);\r\n      this.jobForm.controls.description.setValue(trabajo.description);\r\n      this.jobForm.controls.type.setValue(trabajo.types_id);\r\n      this.imageToShow = [`${environment.API_IMAGE_URL}/${trabajo.image}`];\r\n    }\r\n  }\r\n\r\n  private editarTrabajoEnLaDb(formData: FormData) {\r\n    this.adminPanelCrudService\r\n      .edit(this.trabajoID, formData, 'jobs')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarTrabajos(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'editó', 'trabajo realizado');\r\n        },\r\n        (err) => {\r\n          this.recargarTrabajos(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public borrarTrabajoRealizado(id: number): void {\r\n    Swal.fire({\r\n      title: '¿Seguro querés elimninar el trabajo realizado seleccionado?',\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Si, borrar',\r\n      denyButtonText: `No`,\r\n    }).then((result: SweetAlertResult<any>) => {\r\n      result.isConfirmed ? this.borrarTrabajoDeLaDb(id) : null;\r\n    });\r\n  }\r\n\r\n  private borrarTrabajoDeLaDb(id: number): void {\r\n    this.adminPanelCrudService\r\n      .delete(id, 'jobs')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarTrabajos(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'borró', 'trabajo realizado');\r\n        },\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col\" *ngIf=\"!isEditing && !isCreating\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <app-table\r\n          *ngIf=\"tableData\"\r\n          [title]=\"'Trabajos realizados'\"\r\n          [filasTabla]=\"tableData\"\r\n          [encabezadosTabla]=\"encabezadosTabla\"\r\n          [totalSection]=\"tableData?.length!\"\r\n          (onRecargar)=\"recargarTrabajos($event)\"\r\n          (onCreate)=\"crearTrabajoRealizado()\"\r\n          (onEdit)=\"editarTrabajoRealizado($event)\"\r\n          (onDelete)=\"borrarTrabajoRealizado($event)\"\r\n        ></app-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col\" *ngIf=\"isCreating || isEditing\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h1 class=\"primary-dark\">{{ crudAction }} trabajo realizado</h1>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form\r\n          class=\"form p-t-20 form-material\"\r\n          [formGroup]=\"jobForm\"\r\n          (ngSubmit)=\"formSubmit()\"\r\n        >\r\n          <div class=\"card-body\">\r\n            <div class=\"row justify-content-center\">\r\n              <div\r\n                *ngFor=\"let file of imageToShow\"\r\n                class=\"col-md-4 mb-2\"\r\n                (click)=\"openInput()\"\r\n              >\r\n                <img\r\n                  class=\"img-responsive image-gallery\"\r\n                  [src]=\"file\"\r\n                  alt=\"Servicio realizado\"\r\n                />\r\n              </div>\r\n              <ng-container\r\n                *ngIf=\"crudAction === 'Crear'; else isEditingTemplate\"\r\n              >\r\n                <input\r\n                  [hidden]=\"true\"\r\n                  #imageInput\r\n                  type=\"file\"\r\n                  formControlName=\"image\"\r\n                  (change)=\"showSelectedImage($event)\"\r\n                  multiple\r\n                />\r\n                <div class=\"p-2 text-center\">\r\n                  <span class=\"text-danger\" *ngIf=\"creationImageError\">{{\r\n                    creationImageError\r\n                  }}</span>\r\n                  <span class=\"text-danger\" *ngIf=\"!acceptedFileTypes\"\r\n                    >Los formatos aceptados son JPG, JPEG y PNG</span\r\n                  >\r\n                </div>\r\n              </ng-container>\r\n              <ng-template #isEditingTemplate>\r\n                <input\r\n                  [hidden]=\"true\"\r\n                  #imageInput\r\n                  type=\"file\"\r\n                  formControlName=\"image\"\r\n                  (change)=\"showSelectedImage($event)\"\r\n                />\r\n                <div class=\"p-2 text-center\">\r\n                  <span class=\"text-danger\" *ngIf=\"!acceptedFileTypes\"\r\n                    >Los formatos aceptados son JPG, JPEG y PNG</span\r\n                  >\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>Categoría de trabajo*</label>\r\n              <select formControlName=\"type\" class=\"form-control custom-select\">\r\n                <option [value]=\"null\">--Seleccionar una categoría--</option>\r\n                <option\r\n                  *ngFor=\"let categoria of categoriaDeTrabajo\"\r\n                  [value]=\"categoria.id\"\r\n                >\r\n                  {{ categoria.title }}\r\n                </option>\r\n              </select>\r\n              <div class=\"p-2\">\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    jobForm.controls.type.errors?.required &&\r\n                    jobForm.controls.type.touched\r\n                  \"\r\n                  >Este dato es requerido</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"crudAction === 'Editar'\">\r\n              <div class=\"col\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"input-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      id=\"exampleInputuname2\"\r\n                      placeholder=\"Título\"\r\n                      formControlName=\"title\"\r\n                    />\r\n                    <div class=\"p-2\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          jobForm.controls.title.errors?.minlength &&\r\n                          jobForm.controls.title.touched\r\n                        \"\r\n                        >Debe tener al menos 6 caracteres</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <div class=\"input-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      id=\"exampleInputuname2\"\r\n                      placeholder=\"Descripción\"\r\n                      formControlName=\"description\"\r\n                      rows=\"5\"\r\n                    ></textarea>\r\n                    <div class=\"p-2\">\r\n                      <span\r\n                        *ngIf=\"\r\n                          jobForm.controls.description.errors?.minlength &&\r\n                          jobForm.controls.description.touched\r\n                        \"\r\n                        class=\"text-danger\"\r\n                        >Debe tener al menos 10 caracteres</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-success waves-effect waves-light m-r-10 bgc-primary-dark\"\r\n            >\r\n              Confirmar\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              (click)=\"recargarTrabajos(true)\"\r\n              class=\"btn btn-danger waves-effect waves-light m-r-10\"\r\n            >\r\n              Volver\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TrabajosRealizadosRoutingModule } from './trabajos-realizados-routing.module';\r\nimport { TrabajosRealizadosComponent } from './trabajos-realizados.component';\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TrabajosRealizadosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TrabajosRealizadosRoutingModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class TrabajosRealizadosModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TrabajosRealizadosComponent } from './trabajos-realizados.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: TrabajosRealizadosComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TrabajosRealizadosRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TrabajosRealizadosRoutingModule } from './trabajos-realizados-routing.module';\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { TrabajosRealizadosComponent } from './trabajos-realizados.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [TrabajosRealizadosComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TrabajosRealizadosRoutingModule,\r\n    ComponentsModule\r\n  ]\r\n})\r\nexport class TrabajosRealizadosModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport {\r\n  TypesOfJobs,\r\n  TypesOfJobsData,\r\n} from '../../interfaces/http/jobs.interface';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PresentationCard } from '../../interfaces/presentation-card.interface';\r\nimport { HttpService } from 'src/app/services/http.service';\r\nimport {\r\n  unknownErrorAlert,\r\n  noConnectionAlert,\r\n} from '../../../../helpers/alerts';\r\n\r\n@Component({\r\n  selector: 'app-trabajos-realizados',\r\n  templateUrl: './trabajos-realizados.component.html',\r\n  styleUrls: ['./trabajos-realizados.component.scss'],\r\n})\r\nexport class TrabajosRealizadosComponent implements OnInit, OnDestroy {\r\n  public trabajosComplete!: TypesOfJobs;\r\n  public trabajosData: TypesOfJobsData[] = [];\r\n  public trabajoDataToPresent: PresentationCard[] = [];\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getTypesOfJob();\r\n  }\r\n\r\n  private getTypesOfJob(): void {\r\n    this.httpService\r\n      .getTypesOfJob()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (jobCategories: TypesOfJobs) => {\r\n          if (jobCategories.meta.status.toString().includes('20')) {\r\n            this.trabajosComplete = jobCategories;\r\n            this.trabajosData = jobCategories?.data;\r\n            this.trabajosData?.forEach((trabajo) => {\r\n              trabajo.url = `/main/trabajos-realizados/${trabajo.id}`;\r\n              trabajo.image = `${environment.API_IMAGE_URL}/${trabajo.image}`;\r\n            });\r\n            this.mapTrabajosRealizadosToPresent();\r\n          } else {\r\n            unknownErrorAlert(jobCategories);\r\n          }\r\n        },\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  private mapTrabajosRealizadosToPresent(): void {\r\n    this.trabajosData.forEach((trabajo) => {\r\n      this.trabajoDataToPresent.push({\r\n        titulo: trabajo.title,\r\n        urlFoto: trabajo.image,\r\n        ruta: trabajo.url,\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"main-servicios animate__animated animate__fadeIn animate__slow\">\r\n  <h1 class=\"primary-dark\">Trabajos realizados</h1>\r\n  <hr />\r\n  <app-presentation-card\r\n    [presentationCard]=\"trabajoDataToPresent\"\r\n  ></app-presentation-card>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}