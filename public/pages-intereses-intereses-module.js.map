{"version":3,"sources":["./src/app/modules/admin-panel/pages/intereses/intereses.component.ts","./src/app/modules/admin-panel/pages/intereses/intereses.component.html","./src/app/modules/admin-panel/pages/intereses/intereses-routing.module.ts","./src/app/modules/admin-panel/pages/intereses/intereses.module.ts","./src/app/services/http.service.ts"],"names":[],"mappings":"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","file":"pages-intereses-intereses-module.js","sourcesContent":["import { Component, Host, HostBinding, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CuerpoTabla } from '../../interfaces/tabla.interface';\r\nimport { HttpService } from '../../../../services/http.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport {\r\n  Interests,\r\n  InterestsData,\r\n} from 'src/app/modules/main/interfaces/http/interests.interface';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AdminPanelCrudService } from '../../services/admin-panel-crud.service';\r\nimport Swal, { SweetAlertResult } from 'sweetalert2';\r\nimport {\r\n  noConnectionAlert,\r\n  unknownErrorAlert,\r\n  alertFailureOrSuccessOnCRUDAction,\r\n} from '../../../../helpers/alerts';\r\n\r\n@Component({\r\n  selector: 'app-intereses',\r\n  templateUrl: './intereses.component.html',\r\n  styleUrls: ['./intereses.component.scss'],\r\n})\r\nexport class InteresesComponent implements OnInit {\r\n  @HostBinding('class.admin-panel-container') someClass: Host = true;\r\n\r\n  public encabezadosTabla: string[] = ['Título', 'Descripción'];\r\n  public tableData: CuerpoTabla[] = [];\r\n  public interestData: InterestsData[] = [];\r\n  public isCreating: boolean = false;\r\n  public isEditing: boolean = false;\r\n  public crudAction: string = '';\r\n  public interestForm!: FormGroup;\r\n  public imageToShow: string = '../../../../../assets/no-image.png';\r\n  public fileToUpload?: File;\r\n  public acceptedFileTypes: boolean = true;\r\n  public interestsID!: number;\r\n  public interestCreationImageValidator: string = '';\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    private httpService: HttpService,\r\n    private fb: FormBuilder,\r\n    private adminPanelCrudService: AdminPanelCrudService\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  private createForm(): void {\r\n    this.interestForm = this.fb.group({\r\n      title: ['', [Validators.required, Validators.minLength(6)]],\r\n      description: ['', [Validators.required, Validators.minLength(10)]],\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getIntereses();\r\n  }\r\n\r\n  public formSubmit(): void {\r\n    this.interestForm.markAllAsTouched();\r\n    if (\r\n      this.crudAction === 'Crear' &&\r\n      !this.interestForm.controls.image.value\r\n    ) {\r\n      this.interestCreationImageValidator = 'La imágen es obligatoria';\r\n      return;\r\n    }\r\n\r\n    if (this.interestForm.valid) {\r\n      this.interestCreationImageValidator = '';\r\n      const formData: FormData = new FormData();\r\n      formData.append('title', this.interestForm.controls.title?.value);\r\n      formData.append(\r\n        'description',\r\n        this.interestForm.controls.description?.value\r\n      );\r\n      this.fileToUpload && formData.append('image', this.fileToUpload!);\r\n\r\n      this.crudAction === 'Crear'\r\n        ? this.crearInteresEnLaDb(formData)\r\n        : this.editarInteresEnLaDb(formData);\r\n    }\r\n  }\r\n\r\n  private getIntereses(): void {\r\n    this.httpService\r\n      .getInterests()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (interests: Interests) => {\r\n          if (interests.meta?.status.toString().includes('20')) {\r\n            interests.data.forEach((int: InterestsData) =>\r\n              this.setTableData(int)\r\n            );\r\n          } else {\r\n            unknownErrorAlert(interests);\r\n          }\r\n        },\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  private setTableData(interes: InterestsData): void {\r\n    this.tableData.push({\r\n      imagen: `${environment.API_IMAGE_URL}/${interes.image}`,\r\n      item2: interes.title,\r\n      item3: interes.description,\r\n      id: interes.id,\r\n    });\r\n    this.interestData.push(interes);\r\n  }\r\n\r\n  public recargarIntereses(recargar: boolean): void {\r\n    if (recargar) {\r\n      this.resetsetControls();\r\n      this.tableData = [];\r\n      this.interestData = [];\r\n      this.isCreating = false;\r\n      this.isEditing = false;\r\n      this.getIntereses();\r\n    }\r\n  }\r\n\r\n  private resetsetControls(): void {\r\n    this.interestForm.controls.title.setValue('');\r\n    this.interestForm.controls.description.setValue('');\r\n    this.interestForm.controls.image.setValue('');\r\n    this.imageToShow = '../../../../../assets/no-image.png';\r\n  }\r\n\r\n  public showSelectedImage(e: any) {\r\n    if (\r\n      this.crudAction === 'Crear' &&\r\n      !this.interestForm.controls.image.value\r\n    ) {\r\n      this.interestCreationImageValidator = 'La imágen es obligatoria';\r\n      return;\r\n    } else {\r\n      this.interestCreationImageValidator = '';\r\n    }\r\n\r\n    const file = e.target?.files[0];\r\n\r\n    this.acceptedFileTypes =\r\n      file.type === 'image/jpg' ||\r\n      file.type === 'image/jpeg' ||\r\n      file.type === 'image/png';\r\n\r\n    if (file && this.acceptedFileTypes) {\r\n      this.fileToUpload = file;\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => (this.imageToShow = reader.result as string);\r\n    } else {\r\n      this.imageToShow = '../../../../../assets/no-image.png';\r\n    }\r\n  }\r\n\r\n  public crearInteres(): void {\r\n    this.crudAction = 'Crear';\r\n    this.isCreating = true;\r\n    this.isEditing = false;\r\n  }\r\n\r\n  public crearInteresEnLaDb(formData: FormData): void {\r\n    this.adminPanelCrudService\r\n      .create(formData, 'interests')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarIntereses(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'creó', 'interés');\r\n        },\r\n        (err) => {\r\n          this.recargarIntereses(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public editarInteres(id: number): void {\r\n    this.crudAction = 'Editar';\r\n    this.isEditing = true;\r\n    this.isCreating = false;\r\n    const interes = this.interestData.find((int) => int.id === id);\r\n    if (interes) {\r\n      this.interestsID = id;\r\n      this.interestForm.controls.title.setValue(interes.title);\r\n      this.interestForm.controls.description.setValue(interes.description);\r\n      this.imageToShow = `${environment.API_IMAGE_URL}/${interes.image}`;\r\n    }\r\n  }\r\n\r\n  public editarInteresEnLaDb(formData: FormData): void {\r\n    this.adminPanelCrudService\r\n      .edit(this.interestsID, formData, 'interests')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarIntereses(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'editó', 'interés');\r\n        },\r\n        (err) => {\r\n          this.recargarIntereses(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public borrarInteres(id: number): void {\r\n    Swal.fire({\r\n      title: '¿Seguro querés elimninar el interés seleccionado?',\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Si, borrar',\r\n      denyButtonText: `No`,\r\n    }).then((result: SweetAlertResult<any>) => {\r\n      result.isConfirmed ? this.borrarInteresesDeLaDb(id) : null;\r\n    });\r\n  }\r\n  public borrarInteresesDeLaDb(id: number): void {\r\n    this.adminPanelCrudService\r\n      .delete(id, 'interests')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarIntereses(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'borró', 'interés');\r\n        },\r\n        (err) => {\r\n          this.recargarIntereses(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col\" *ngIf=\"!isEditing && !isCreating\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <app-table\r\n          *ngIf=\"tableData\"\r\n          [title]=\"'Intereses'\"\r\n          [filasTabla]=\"tableData\"\r\n          [encabezadosTabla]=\"encabezadosTabla\"\r\n          [totalSection]=\"tableData?.length!\"\r\n          (onRecargar)=\"recargarIntereses($event)\"\r\n          (onCreate)=\"crearInteres()\"\r\n          (onEdit)=\"editarInteres($event)\"\r\n          (onDelete)=\"borrarInteres($event)\"\r\n        >\r\n        </app-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col\" *ngIf=\"isCreating || isEditing\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h1 class=\"primary-dark\">{{ crudAction }} Interes/es</h1>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form\r\n          class=\"form p-t-20 form-material\"\r\n          [formGroup]=\"interestForm\"\r\n          (ngSubmit)=\"formSubmit()\"\r\n        >\r\n          <div class=\"card-body\">\r\n            <div class=\"row justify-content-center\">\r\n              <div class=\"col-md-4 mb-2\" (click)=\"imageInput.click()\">\r\n                <img\r\n                  class=\"img-responsive\"\r\n                  [src]=\"imageToShow\"\r\n                  alt=\"Trabajo realizado\"\r\n                />\r\n                <input\r\n                  [hidden]=\"true\"\r\n                  #imageInput\r\n                  type=\"file\"\r\n                  formControlName=\"image\"\r\n                  (change)=\"showSelectedImage($event)\"\r\n                />\r\n                <div class=\"p-2\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"interestCreationImageValidator\"\r\n                    >{{ interestCreationImageValidator }}</span\r\n                  >\r\n                  <span class=\"text-danger\" *ngIf=\"!acceptedFileTypes\"\r\n                    >Los formatos aceptados son JPG, JPEG y PNG</span\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"input-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      id=\"exampleInputuname2\"\r\n                      placeholder=\"Título\"\r\n                      formControlName=\"title\"\r\n                    />\r\n                    <div class=\"p-2\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          interestForm.controls.title.errors?.required &&\r\n                          interestForm.controls.title.touched\r\n                        \"\r\n                        >Este campo es requerido</span\r\n                      >\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          interestForm.controls.title.errors?.minlength &&\r\n                          interestForm.controls.title.touched\r\n                        \"\r\n                        >Debe tener al menos 6 caracteres</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <div class=\"input-group\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      id=\"exampleInputuname2\"\r\n                      placeholder=\"Descripción\"\r\n                      formControlName=\"description\"\r\n                      rows=\"5\"\r\n                    ></textarea>\r\n                    <div class=\"p-2\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          interestForm.controls.description.errors?.required &&\r\n                          interestForm.controls.description.touched\r\n                        \"\r\n                        >Este campo es requerido</span\r\n                      >\r\n                      <span\r\n                        *ngIf=\"\r\n                          interestForm.controls.description.errors?.minlength &&\r\n                          interestForm.controls.description.touched\r\n                        \"\r\n                        class=\"text-danger\"\r\n                        >Debe tener al menos 10 caracteres</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-success waves-effect waves-light m-r-10 bgc-primary-dark\"\r\n            >\r\n              Confirmar\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              (click)=\"recargarIntereses(true)\"\r\n              class=\"btn btn-danger waves-effect waves-light m-r-10\"\r\n            >\r\n              Volver\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { InteresesComponent } from './intereses.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: InteresesComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InteresesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { InteresesRoutingModule } from './intereses-routing.module';\r\nimport { InteresesComponent } from './intereses.component';\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InteresesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    InteresesRoutingModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class InteresesModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport {\r\n  BatchComplete,\r\n  Lotes,\r\n  PostalZones,\r\n} from '../modules/main/interfaces/http/batches.interface';\r\nimport { Interests } from '../modules/main/interfaces/http/interests.interface';\r\nimport {\r\n  Job,\r\n  TypesOfJobs,\r\n} from '../modules/main/interfaces/http/jobs.interface';\r\nimport {\r\n  Services,\r\n  TipoServicio,\r\n} from '../modules/main/interfaces/http/services.interface';\r\nimport {\r\n  Contact,\r\n  ContactFormRes,\r\n} from '../modules/main/interfaces/http/contact.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Obtiene las zonas en las cuales se venden lotes y/o construyen casas\r\n   *\r\n   * @return {*}  {Observable<PostalZones>}\r\n   * @memberof HttpService\r\n   */\r\n  public getAllZones(): Observable<PostalZones> {\r\n    return this.http.get<PostalZones>(`${environment.API_BASE_URL}/categories`);\r\n  }\r\n\r\n  /**\r\n   * Obtiene los lotes relacionados a una zona\r\n   *\r\n   * @param zonaId: string\r\n   * @return {*}  {Observable<Lotes>}\r\n   * @memberof HttpService\r\n   */\r\n  public getLotes(zonaId: string): Observable<Lotes> {\r\n    return this.http.get<Lotes>(\r\n      `${environment.API_BASE_URL}/categories/${zonaId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene el detalle de un lote particular\r\n   *\r\n   * @param loteId: string\r\n   * @return {*}  {Observable<BatchComplete>}\r\n   * @memberof HttpService\r\n   */\r\n  public getDetalleLote(loteId: string): Observable<BatchComplete> {\r\n    return this.http.get<BatchComplete>(\r\n      `${environment.API_BASE_URL}/batches/${loteId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los servicios que ofrece la compañía\r\n   *\r\n   * @return {*}  {Observable<Services>}\r\n   * @memberof HttpService\r\n   */\r\n  public getAllServices(): Observable<Services> {\r\n    return this.http.get<Services>(`${environment.API_BASE_URL}/services`);\r\n  }\r\n  public getOneService(id: string): Observable<TipoServicio> {\r\n    return this.http.get<TipoServicio>(\r\n      `${environment.API_BASE_URL}/services/${id}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los trabajos realizados por la compañía\r\n   *\r\n   * @return {*}  {Observable<TypesOfJobs>}\r\n   * @memberof HttpService\r\n   */\r\n  public getTypesOfJob(): Observable<TypesOfJobs> {\r\n    return this.http.get<TypesOfJobs>(`${environment.API_BASE_URL}/types`);\r\n  }\r\n\r\n  /**\r\n   * Obtiene uno de los tipos de trabajo realizados por la compañía\r\n   *\r\n   * @param jobTypeID: string\r\n   * @return {*}  {Observable<Job>}\r\n   * @memberof HttpService\r\n   */\r\n  public getOneTypeOfJob(jobTypeID: string): Observable<Job> {\r\n    return this.http.get<Job>(`${environment.API_BASE_URL}/types/${jobTypeID}`);\r\n  }\r\n\r\n  /**\r\n   * Obtiene los artículos de interés creados por la compañía\r\n   *\r\n   * @return {*}  {Observable<Interests>}\r\n   * @memberof HttpService\r\n   */\r\n  public getInterests(): Observable<Interests> {\r\n    return this.http.get<Interests>(`${environment.API_BASE_URL}/interests`);\r\n  }\r\n\r\n  /**\r\n   * Envía el formulario de contacto\r\n   *\r\n   * @param form: Contact\r\n   * @return {*}  {Observable<ContactFormRes>}\r\n   * @memberof HttpService\r\n   */\r\n  public sendContactForm(form: Contact): Observable<ContactFormRes> {\r\n    return this.http.post<ContactFormRes>(\r\n      `${environment.API_BASE_URL}/contact`,\r\n      form\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}