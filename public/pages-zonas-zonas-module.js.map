{"version":3,"sources":["./src/app/modules/admin-panel/pages/zonas/zonas.component.ts","./src/app/modules/admin-panel/pages/zonas/zonas.component.html","./src/app/services/http.service.ts","./src/app/modules/admin-panel/pages/zonas/zonas.module.ts","./src/app/modules/admin-panel/pages/zonas/zonas-routing.module.ts"],"names":[],"mappings":"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","file":"pages-zonas-zonas-module.js","sourcesContent":["import { Component, Host, HostBinding, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CuerpoTabla } from '../../interfaces/tabla.interface';\r\nimport { HttpService } from '../../../../services/http.service';\r\nimport { finalize, takeUntil } from 'rxjs/operators';\r\nimport {\r\n  PostalZones,\r\n  PostalZonesData,\r\n} from 'src/app/modules/main/interfaces/http/batches.interface';\r\nimport Swal, { SweetAlertResult } from 'sweetalert2';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AdminPanelCrudService } from '../../services/admin-panel-crud.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport {\r\n  alertFailureOrSuccessOnCRUDAction,\r\n  noConnectionAlert,\r\n  unknownErrorAlert,\r\n} from '../../../../helpers/alerts';\r\n\r\n@Component({\r\n  selector: 'app-zonas',\r\n  templateUrl: './zonas.component.html',\r\n  styleUrls: ['./zonas.component.scss'],\r\n})\r\nexport class ZonasComponent implements OnInit {\r\n  @HostBinding('class.admin-panel-container') someClass: Host = true;\r\n\r\n  public encabezadosTabla: string[] = ['Título'];\r\n  public tableData: CuerpoTabla[] = [];\r\n  public zonas: PostalZonesData[] = [];\r\n  public zonasForm!: FormGroup;\r\n  public isEditing: boolean = false;\r\n  public isCreating: boolean = false;\r\n  public crudAction: string = '';\r\n  public imageToShow: string = '../../../../../assets/no-image.png';\r\n  public acceptedFileTypes: boolean = true;\r\n  public zonaID!: number;\r\n  public creationImageError: string = '';\r\n\r\n  private fileToUpload!: File;\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    private httpSrv: HttpService,\r\n    private fb: FormBuilder,\r\n    private adminPanelCrudService: AdminPanelCrudService\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  private createForm(): void {\r\n    this.zonasForm = this.fb.group({\r\n      image: [''],\r\n      title: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getZonas();\r\n  }\r\n\r\n  private getZonas(): void {\r\n    this.httpSrv\r\n      .getAllZones()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (zonas: PostalZones) =>\r\n          zonas.meta.status.toString().includes('20')\r\n            ? this.setTableData(zonas)\r\n            : unknownErrorAlert(zonas),\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  private setTableData(zonas: PostalZones): void {\r\n    zonas?.data?.forEach((zona) => {\r\n      this.tableData.push({\r\n        imagen: `${environment.API_IMAGE_URL}/${zona.image}`,\r\n        item2: zona.title,\r\n        id: zona.id,\r\n      });\r\n      this.zonas.push(zona);\r\n    });\r\n  }\r\n\r\n  public formSubmit(): void {\r\n    this.zonasForm.markAllAsTouched();\r\n    if (this.crudAction === 'Crear' && !this.zonasForm.controls.image.value) {\r\n      this.creationImageError = 'La imágen es obligatoria';\r\n      return;\r\n    }\r\n\r\n    if (this.zonasForm.valid) {\r\n      const formData: FormData = new FormData();\r\n      formData.append('title', this.zonasForm.controls.title?.value);\r\n      this.fileToUpload && formData.append('image', this.fileToUpload!);\r\n\r\n      this.crudAction === 'Crear'\r\n        ? this.crearZonaEnLaDb(formData)\r\n        : this.editarZonaEnLaDb(formData);\r\n    }\r\n  }\r\n\r\n  public recargarZonas(recargar: boolean): void {\r\n    if (recargar) {\r\n      this.resetsetControls();\r\n      this.tableData = [];\r\n      this.tableData = [];\r\n      this.zonas = [];\r\n      this.isCreating = false;\r\n      this.isEditing = false;\r\n      this.getZonas();\r\n    }\r\n  }\r\n\r\n  private resetsetControls(): void {\r\n    this.zonasForm.controls?.title?.setValue('');\r\n    this.zonasForm.controls?.image?.setValue('');\r\n    this.imageToShow = '../../../../../assets/no-image.png';\r\n  }\r\n\r\n  public showSelectedImage(e: any) {\r\n    if (this.crudAction === 'Crear' && !this.zonasForm.controls.image.value) {\r\n      this.creationImageError = 'La imágen es obligatoria';\r\n      return;\r\n    } else {\r\n      this.creationImageError = '';\r\n    }\r\n\r\n    const file = e.target?.files[0];\r\n\r\n    this.acceptedFileTypes =\r\n      file.type === 'image/jpg' ||\r\n      file.type === 'image/jpeg' ||\r\n      file.type === 'image/png';\r\n\r\n    if (file && this.acceptedFileTypes) {\r\n      this.fileToUpload = file;\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => (this.imageToShow = reader.result as string);\r\n    } else {\r\n      this.imageToShow = '../../../../../assets/no-image.png';\r\n    }\r\n  }\r\n\r\n  public openCrearZona(): void {\r\n    this.isEditing = false;\r\n    this.isCreating = true;\r\n    this.crudAction = 'Crear';\r\n  }\r\n\r\n  private crearZonaEnLaDb(formData: FormData): void {\r\n    this.adminPanelCrudService\r\n      .create(formData, 'categories')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res: any) => {\r\n          this.recargarZonas(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'creó', 'zona');\r\n        },\r\n        (err) => {\r\n          this.recargarZonas(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public openEditarZona(id: number): void {\r\n    this.isEditing = true;\r\n    this.isCreating = false;\r\n    this.crudAction = 'Editar';\r\n    const zonaSeleccionada = this.zonas.find((s) => s.id === id);\r\n    if (zonaSeleccionada) {\r\n      this.zonaID = id;\r\n      this.zonasForm.controls.title.setValue(zonaSeleccionada.title);\r\n      this.imageToShow = `${environment.API_IMAGE_URL}/${zonaSeleccionada.image}`;\r\n    }\r\n  }\r\n\r\n  public editarZonaEnLaDb(formData: FormData): void {\r\n    this.adminPanelCrudService\r\n      .edit(this.zonaID, formData, 'categories')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarZonas(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'editó', 'zona');\r\n        },\r\n        (err) => {\r\n          this.recargarZonas(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public openBorrarZona(id: number): void {\r\n    Swal.fire({\r\n      title: '¿Seguro querés elimninar la zona seleccionada?',\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Si, borrar',\r\n      denyButtonText: `No`,\r\n    }).then((result: SweetAlertResult<any>) => {\r\n      result.isConfirmed ? this.borrarZonaEnLaDb(id) : null;\r\n    });\r\n  }\r\n\r\n  private borrarZonaEnLaDb(id: number) {\r\n    this.adminPanelCrudService\r\n      .delete(id, 'categories')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarZonas(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'borró', 'zona');\r\n        },\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col\" *ngIf=\"!isEditing && !isCreating\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <app-table\r\n          *ngIf=\"tableData\"\r\n          [title]=\"'Zonas'\"\r\n          [filasTabla]=\"tableData\"\r\n          [encabezadosTabla]=\"encabezadosTabla\"\r\n          [totalSection]=\"tableData?.length!\"\r\n          (onRecargar)=\"recargarZonas($event)\"\r\n          (onCreate)=\"openCrearZona()\"\r\n          (onEdit)=\"openEditarZona($event)\"\r\n          (onDelete)=\"openBorrarZona($event)\"\r\n        ></app-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col\" *ngIf=\"isCreating || isEditing\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h1 class=\"primary-dark\">{{ crudAction }} servicio</h1>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form\r\n          class=\"form p-t-20 form-material\"\r\n          [formGroup]=\"zonasForm\"\r\n          (ngSubmit)=\"formSubmit()\"\r\n        >\r\n          <div class=\"card-body\">\r\n            <div class=\"row justify-content-center\">\r\n              <div class=\"col-md-4 mb-2\" (click)=\"imageInput.click()\">\r\n                <img\r\n                  class=\"img-responsive\"\r\n                  [src]=\"imageToShow\"\r\n                  alt=\"Trabajo realizado\"\r\n                />\r\n                <input\r\n                  [hidden]=\"true\"\r\n                  #imageInput\r\n                  type=\"file\"\r\n                  formControlName=\"image\"\r\n                  (change)=\"showSelectedImage($event)\"\r\n                />\r\n                <div class=\"p-2\">\r\n                  <span class=\"text-danger\" *ngIf=\"creationImageError\">{{\r\n                    creationImageError\r\n                  }}</span>\r\n                  <span class=\"text-danger\" *ngIf=\"!acceptedFileTypes\"\r\n                    >Los formatos aceptados son JPG, JPEG y PNG</span\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"input-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      id=\"exampleInputuname2\"\r\n                      placeholder=\"Título\"\r\n                      formControlName=\"title\"\r\n                    />\r\n                    <div class=\"p-2\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          zonasForm.controls.title.errors?.required &&\r\n                          zonasForm.controls.title.touched\r\n                        \"\r\n                        >Este campo es requerido</span\r\n                      >\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          zonasForm.controls.title.errors?.minlength &&\r\n                          zonasForm.controls.title.touched\r\n                        \"\r\n                        >Debe tener al menos 6 caracteres</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-success waves-effect waves-light m-r-10 bgc-primary-dark\"\r\n            >\r\n              Confirmar\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              (click)=\"recargarZonas(true)\"\r\n              class=\"btn btn-danger waves-effect waves-light m-r-10\"\r\n            >\r\n              Volver\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport {\r\n  BatchComplete,\r\n  Lotes,\r\n  PostalZones,\r\n} from '../modules/main/interfaces/http/batches.interface';\r\nimport { Interests } from '../modules/main/interfaces/http/interests.interface';\r\nimport {\r\n  Job,\r\n  TypesOfJobs,\r\n} from '../modules/main/interfaces/http/jobs.interface';\r\nimport {\r\n  Services,\r\n  TipoServicio,\r\n} from '../modules/main/interfaces/http/services.interface';\r\nimport {\r\n  Contact,\r\n  ContactFormRes,\r\n} from '../modules/main/interfaces/http/contact.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Obtiene las zonas en las cuales se venden lotes y/o construyen casas\r\n   *\r\n   * @return {*}  {Observable<PostalZones>}\r\n   * @memberof HttpService\r\n   */\r\n  public getAllZones(): Observable<PostalZones> {\r\n    return this.http.get<PostalZones>(`${environment.API_BASE_URL}/categories`);\r\n  }\r\n\r\n  /**\r\n   * Obtiene los lotes relacionados a una zona\r\n   *\r\n   * @param zonaId: string\r\n   * @return {*}  {Observable<Lotes>}\r\n   * @memberof HttpService\r\n   */\r\n  public getLotes(zonaId: string): Observable<Lotes> {\r\n    return this.http.get<Lotes>(\r\n      `${environment.API_BASE_URL}/categories/${zonaId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene el detalle de un lote particular\r\n   *\r\n   * @param loteId: string\r\n   * @return {*}  {Observable<BatchComplete>}\r\n   * @memberof HttpService\r\n   */\r\n  public getDetalleLote(loteId: string): Observable<BatchComplete> {\r\n    return this.http.get<BatchComplete>(\r\n      `${environment.API_BASE_URL}/batches/${loteId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los servicios que ofrece la compañía\r\n   *\r\n   * @return {*}  {Observable<Services>}\r\n   * @memberof HttpService\r\n   */\r\n  public getAllServices(): Observable<Services> {\r\n    return this.http.get<Services>(`${environment.API_BASE_URL}/services`);\r\n  }\r\n  public getOneService(id: string): Observable<TipoServicio> {\r\n    return this.http.get<TipoServicio>(\r\n      `${environment.API_BASE_URL}/services/${id}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los trabajos realizados por la compañía\r\n   *\r\n   * @return {*}  {Observable<TypesOfJobs>}\r\n   * @memberof HttpService\r\n   */\r\n  public getTypesOfJob(): Observable<TypesOfJobs> {\r\n    return this.http.get<TypesOfJobs>(`${environment.API_BASE_URL}/types`);\r\n  }\r\n\r\n  /**\r\n   * Obtiene uno de los tipos de trabajo realizados por la compañía\r\n   *\r\n   * @param jobTypeID: string\r\n   * @return {*}  {Observable<Job>}\r\n   * @memberof HttpService\r\n   */\r\n  public getOneTypeOfJob(jobTypeID: string): Observable<Job> {\r\n    return this.http.get<Job>(`${environment.API_BASE_URL}/types/${jobTypeID}`);\r\n  }\r\n\r\n  /**\r\n   * Obtiene los artículos de interés creados por la compañía\r\n   *\r\n   * @return {*}  {Observable<Interests>}\r\n   * @memberof HttpService\r\n   */\r\n  public getInterests(): Observable<Interests> {\r\n    return this.http.get<Interests>(`${environment.API_BASE_URL}/interests`);\r\n  }\r\n\r\n  /**\r\n   * Envía el formulario de contacto\r\n   *\r\n   * @param form: Contact\r\n   * @return {*}  {Observable<ContactFormRes>}\r\n   * @memberof HttpService\r\n   */\r\n  public sendContactForm(form: Contact): Observable<ContactFormRes> {\r\n    return this.http.post<ContactFormRes>(\r\n      `${environment.API_BASE_URL}/contact`,\r\n      form\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ZonasRoutingModule } from './zonas-routing.module';\r\nimport { ZonasComponent } from './zonas.component';\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ZonasComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ZonasRoutingModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class ZonasModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ZonasComponent } from './zonas.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: ZonasComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ZonasRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}