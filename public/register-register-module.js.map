{"version":3,"sources":["./src/app/pages/auth/register/register.module.ts","./src/app/pages/auth/register/register-routing.module.ts","./src/app/pages/auth/register/register.component.ts","./src/app/pages/auth/register/register.component.html"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RegisterRoutingModule } from './register-routing.module';\r\nimport { RegisterComponent } from './register.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RegisterRoutingModule,\r\n    ReactiveFormsModule,\r\n    ComponentsModule\r\n  ]\r\n})\r\nexport class RegisterModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegisterRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  private emailPattern: string = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\r\n\r\n  public registerForm: FormGroup = this.fb.group({\r\n    nombre: ['', [Validators.required]],\r\n    dni: ['', [Validators.required, Validators.max(99999999), Validators.minLength(8)]],\r\n    email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\r\n    password: ['', [Validators.required]],\r\n    confirmPassword: ['', [Validators.required]],\r\n    terminosYCondiciones: [false, [Validators.required]]\r\n  })\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register(): void {\r\n    this.registerForm.markAllAsTouched()\r\n    console.log(this.registerForm.value)\r\n  }\r\n}\r\n","<div class=\"register-container\">\r\n  <div class=\"box\" >\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\r\n      <mat-form-field>\r\n        <mat-label>Nombre completo</mat-label>\r\n        <input formControlName=\"nombre\" type=\"text\" matInput>\r\n        <mat-error *ngIf=\"registerForm.controls.nombre.errors?.required\" >Este dato es requerido</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>DNI</mat-label>\r\n        <input formControlName=\"dni\" type=\"number\" matInput>\r\n        <mat-error *ngIf=\"registerForm.controls.dni.errors?.required\" >Este dato es requerido</mat-error>\r\n        <mat-error *ngIf=\"registerForm.controls.dni.hasError('max')\" >Número máximo 99.999.999</mat-error>\r\n        <mat-error *ngIf=\"registerForm.controls.dni.hasError('min-length')\" >Debe contenter al menos 8 caracteres</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>Email</mat-label>\r\n        <input formControlName=\"email\" matInput autocomplete=\"email\">\r\n        <mat-error *ngIf=\"registerForm.controls.email.errors?.required\" >Este dato es requerido</mat-error>\r\n        <mat-error *ngIf=\"registerForm.controls.email.errors?.pattern\" >Por favor ingresá un email válido</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>Contraseña</mat-label>\r\n        <input formControlName=\"password\" matInput type=\"password\" autocomplete=\"new-password\">\r\n        <mat-error *ngIf=\"registerForm.controls.password.errors?.required\" >Este dato es requerido</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>Repetir contraseña</mat-label>\r\n        <input formControlName=\"confirmPassword\" matInput type=\"password\" autocomplete=\"new-password\">\r\n        <mat-error *ngIf=\"registerForm.controls.confirmPassword.errors?.required\">Este dato es requerido</mat-error>\r\n      </mat-form-field>\r\n      <mat-checkbox formControlName=\"terminosYCondiciones\" class=\"primary-dark\">Acepto <a routerLink=\"/\" >términos y condiciones</a></mat-checkbox>\r\n      <span *ngIf=\"!registerForm.controls.terminosYCondiciones.value && registerForm.controls.terminosYCondiciones.touched\" >Este dato es requerido</span>\r\n      <button mat-button type=\"submit\" class=\"primary-dark\">Registrarse</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}