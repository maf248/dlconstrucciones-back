{"version":3,"sources":["./src/app/modules/main/pages/auth/register/register-routing.module.ts","./src/app/modules/main/pages/auth/register/register.module.ts","./src/app/modules/main/pages/auth/register/register.component.ts","./src/app/modules/main/pages/auth/register/register.component.html"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegisterRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RegisterRoutingModule } from './register-routing.module';\r\nimport { RegisterComponent } from './register.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ComponentsModule } from '../../../components/components.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RegisterRoutingModule,\r\n    ReactiveFormsModule,\r\n    ComponentsModule\r\n  ]\r\n})\r\nexport class RegisterModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport {\r\n  noConnectionAlert,\r\n  unknownErrorAlert,\r\n  customMessageAlertWithActions,\r\n} from '../../../../../helpers/alerts';\r\nimport { RegisterRes } from '../../../interfaces/http/auth.interface';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { Router } from '@angular/router';\r\nimport { UserStoreService } from '../../../../../services/user-store.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  private emailPattern: string = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\r\n  private destroy$: Subject<boolean> = new Subject();\r\n  public showValidationComponent: boolean = false;\r\n  public passwordEye: string = 'fa fa-eye-slash';\r\n  public userWantsToSeePassword: boolean = false;\r\n  public repeatPasswordEye: string = 'fa fa-eye-slash';\r\n  public userWantsToSeeRepeatPassword: boolean = false;\r\n  public user: User | undefined;\r\n  public registerForm!: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private userStore: UserStoreService\r\n  ) {\r\n    this.setUser();\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.validateTermsAndConditionsAreRequired();\r\n    this.validateRoleIsRequired();\r\n  }\r\n\r\n  private setUser(): void {\r\n    this.userStore.loggedUser$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((res) => {\r\n        res.id ? (this.user = res) : (this.user = undefined);\r\n      });\r\n  }\r\n\r\n  private createForm(): void {\r\n    this.registerForm = this.fb.group(\r\n      {\r\n        first_name: ['', [Validators.required, Validators.minLength(3)]],\r\n        last_name: ['', [Validators.required, Validators.minLength(3)]],\r\n        dni: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.max(999999999),\r\n            Validators.min(1000000),\r\n          ],\r\n        ],\r\n        email: [\r\n          '',\r\n          [Validators.required, Validators.pattern(this.emailPattern)],\r\n        ],\r\n        password: ['', Validators.required],\r\n        passwordRepeat: ['', [Validators.required]],\r\n        terminosYCondiciones: [false],\r\n        role: ['user'],\r\n      },\r\n      {\r\n        validator: [\r\n          this.passwordMatchFormValidator,\r\n          this.validateStrongPassword,\r\n        ],\r\n      }\r\n    );\r\n  }\r\n\r\n  private passwordMatchFormValidator(form: FormGroup): void {\r\n    const pass1Control = form.get('password');\r\n    const pass2Control = form.get('passwordRepeat');\r\n\r\n    if (pass1Control!.value === pass2Control!.value) {\r\n      pass2Control!.setErrors(null);\r\n    } else {\r\n      pass2Control!.setErrors({ notMatch: true });\r\n    }\r\n  }\r\n\r\n  private validateStrongPassword(form: FormGroup): void {\r\n    const password = form.get('password');\r\n    if (!/\\d/.test(password?.value)) {\r\n      password?.setErrors({ notDigits: true });\r\n    } else if (!/[a-z]/.test(password?.value)) {\r\n      password?.setErrors({ noLowercase: true });\r\n    } else if (!/[A-Z]/.test(password?.value)) {\r\n      password?.setErrors({ noUppercase: true });\r\n    } else if (!/[*._%+-]/.test(password?.value)) {\r\n      password?.setErrors({ notSymbols: true });\r\n    } else if (password?.value.length < 8) {\r\n      password?.setErrors({ minlength: true });\r\n    }\r\n  }\r\n\r\n  public showStrongPasswordErrorMsgs(): boolean {\r\n    return (\r\n      this.registerForm.controls.password.touched &&\r\n      (this.registerForm.controls.password.errors?.notDigits ||\r\n        this.registerForm.controls.password.errors?.noLowercase ||\r\n        this.registerForm.controls.password.errors?.noUppercase ||\r\n        this.registerForm.controls.password.errors?.notSymbols ||\r\n        this.registerForm.controls.password.errors?.minlength)\r\n    );\r\n  }\r\n\r\n  private validateTermsAndConditionsAreRequired(): void {\r\n    const termsAndConditions: AbstractControl | undefined | null =\r\n      this.registerForm.controls.terminosYCondiciones;\r\n\r\n    if (\r\n      (this.user && this.user?.role !== 'master' && termsAndConditions) ||\r\n      !this.user\r\n    ) {\r\n      !this.registerForm.controls.terminosYCondiciones?.value\r\n        ? this.registerForm.controls.terminosYCondiciones?.setErrors({\r\n            required: true,\r\n          })\r\n        : null;\r\n    }\r\n  }\r\n\r\n  private validateRoleIsRequired(): void {\r\n    const role: AbstractControl = this.registerForm.controls.role;\r\n    role?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((value) => {\r\n      if (this.user?.role === 'master' && value === 'no') {\r\n        role.setErrors({ notValue: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  public register(): void {\r\n    this.registerForm.markAllAsTouched();\r\n    if (this.registerForm.valid) {\r\n      if (this.user?.role === 'master') {\r\n        this.authService\r\n          .registerSiendoMaster(this.registerForm.value)\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe({\r\n            next: (res) => this.setRegisterFlow(res),\r\n            error: (err) => noConnectionAlert(err),\r\n          });\r\n      } else {\r\n        this.authService\r\n          .register(this.registerForm.value)\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe(\r\n            (res: RegisterRes) => this.setRegisterFlow(res),\r\n            (err) => noConnectionAlert(err)\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  private setRegisterFlow(res: RegisterRes): void {\r\n    if (res.meta.status.toString().includes('20')) {\r\n      if (this.user?.role === 'master') {\r\n        customMessageAlertWithActions(\r\n          '¡Perfecto, CABALLO!',\r\n          'Usuario creado',\r\n          'OK',\r\n          'success'\r\n        ).then((result) =>\r\n          result ? this.router.navigateByUrl('/admin/dashboard') : null\r\n        );\r\n      } else {\r\n        this.showValidationComponent = true;\r\n      }\r\n    } else {\r\n      unknownErrorAlert(res);\r\n    }\r\n  }\r\n\r\n  public showPassword(e: HTMLInputElement): void {\r\n    this.userWantsToSeePassword = !this.userWantsToSeePassword;\r\n    this.userWantsToSeePassword\r\n      ? (this.passwordEye = 'fa fa-eye')\r\n      : (this.passwordEye = 'fa fa-eye-slash');\r\n    this.userWantsToSeePassword ? (e.type = 'text') : (e.type = 'password');\r\n  }\r\n\r\n  public showRepeatPassword(e: HTMLInputElement): void {\r\n    this.userWantsToSeeRepeatPassword = !this.userWantsToSeeRepeatPassword;\r\n    this.userWantsToSeeRepeatPassword\r\n      ? (this.repeatPasswordEye = 'fa fa-eye')\r\n      : (this.repeatPasswordEye = 'fa fa-eye-slash');\r\n    this.userWantsToSeeRepeatPassword\r\n      ? (e.type = 'text')\r\n      : (e.type = 'password');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<div\r\n  *ngIf=\"!showValidationComponent; else registerValidationTemplate\"\r\n  class=\"row animate__animated animate__fadeIn animate__slow\"\r\n>\r\n  <div class=\"col-lg-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h2 class=\"primary-dark\">Registro</h2>\r\n        <span>\r\n          ¿Ya tenés cuenta?\r\n          <a routerLink=\"/main/auth/login\" class=\"pointer primary-dark\"\r\n            >Iniciá sesión</a\r\n          >\r\n        </span>\r\n      </div>\r\n      <form\r\n        class=\"form p-t-20 form-material\"\r\n        [formGroup]=\"registerForm\"\r\n        (ngSubmit)=\"register()\"\r\n      >\r\n        <div class=\"card-body\">\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputuname2\"\r\n                placeholder=\"Nombre*\"\r\n                formControlName=\"first_name\"\r\n              />\r\n              <div class=\"p-2\">\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    registerForm.controls.first_name.errors?.required &&\r\n                    registerForm.controls.first_name.touched\r\n                  \"\r\n                  >Este dato es requerido</span\r\n                >\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    registerForm.controls.first_name.errors?.minlength &&\r\n                    registerForm.controls.first_name.touched\r\n                  \"\r\n                  >Debe tener al menos 3 caracteres</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputuname2\"\r\n                placeholder=\"Apellido*\"\r\n                formControlName=\"last_name\"\r\n              />\r\n              <div class=\"p-2\">\r\n                <span\r\n                  *ngIf=\"\r\n                    registerForm.controls.last_name.errors?.required &&\r\n                    registerForm.controls.last_name.touched\r\n                  \"\r\n                  class=\"text-danger\"\r\n                  >Este dato es requerido</span\r\n                >\r\n                <span\r\n                  *ngIf=\"\r\n                    registerForm.controls.last_name.errors?.minlength &&\r\n                    registerForm.controls.last_name.touched\r\n                  \"\r\n                  class=\"text-danger\"\r\n                  >Debe tener al menos 3 caracteres</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputuname2\"\r\n                placeholder=\"DNI*\"\r\n                formControlName=\"dni\"\r\n              />\r\n              <div class=\"p-2\">\r\n                <span\r\n                  *ngIf=\"\r\n                    registerForm.controls.dni.errors?.required &&\r\n                    registerForm.controls.dni.touched\r\n                  \"\r\n                  class=\"text-danger\"\r\n                  >Este dato es requerido</span\r\n                >\r\n                <span\r\n                  *ngIf=\"\r\n                    registerForm.controls.dni.errors?.min &&\r\n                    registerForm.controls.dni.touched\r\n                  \"\r\n                  class=\"text-danger\"\r\n                  >Debe contenter al menos 7 caracteres</span\r\n                >\r\n                <span\r\n                  *ngIf=\"\r\n                    registerForm.controls.dni.errors?.max &&\r\n                    registerForm.controls.dni.touched\r\n                  \"\r\n                  class=\"text-danger\"\r\n                  >Número máximo 999.999.999</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail2\"\r\n                placeholder=\"juan@tuemail.com*\"\r\n                formControlName=\"email\"\r\n              />\r\n              <div class=\"p-2\">\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    registerForm.controls.email.errors?.required &&\r\n                    registerForm.controls.email.touched\r\n                  \"\r\n                  >Este dato es requerido</span\r\n                >\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    registerForm.controls.email.errors?.pattern &&\r\n                    registerForm.controls.email.touched\r\n                  \"\r\n                  >Por favor ingresá un email válido</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputpwd2\"\r\n                placeholder=\"Escribir contraseña*\"\r\n                formControlName=\"password\"\r\n                #inputPassword\r\n              />\r\n              <div class=\"input-group-addon\">\r\n                <i\r\n                  (click)=\"showPassword(inputPassword)\"\r\n                  [class]=\"passwordEye\"\r\n                ></i>\r\n              </div>\r\n              <div class=\"p-2\">\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    registerForm.controls.password.errors?.required &&\r\n                    registerForm.controls.password.touched\r\n                  \"\r\n                  >Este dato es requerido</span\r\n                >\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    registerForm.controls.password.errors?.pattern &&\r\n                    registerForm.controls.password.touched\r\n                  \"\r\n                  >La contraseña debe tener un mínimo de 8 caracteres,\r\n                  incluyendo una minúscula, una mayúscula, un número y un\r\n                  símbolo</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"showStrongPasswordErrorMsgs()\" class=\"p-2\">\r\n              <ul class=\"form-text text-danger list-unstyled\">\r\n                <li *ngIf=\"showStrongPasswordErrorMsgs()\">\r\n                  La contraseña debe tener al menos 8 caracteres\r\n                </li>\r\n                <li *ngIf=\"showStrongPasswordErrorMsgs()\">\r\n                  La contraseña debe contener al menos un número\r\n                </li>\r\n                <li *ngIf=\"showStrongPasswordErrorMsgs()\">\r\n                  La contraseña debe contener al menos una letra minúscula\r\n                </li>\r\n                <li *ngIf=\"showStrongPasswordErrorMsgs()\">\r\n                  La contraseña debe tener al menos una letra mayúscula\r\n                </li>\r\n                <li *ngIf=\"showStrongPasswordErrorMsgs()\">\r\n                  La contraseña debe tener al menos alguno de los siguientes\r\n                  símbolos *._%+-\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputpwd3\"\r\n                placeholder=\"Confirmar contraseña*\"\r\n                formControlName=\"passwordRepeat\"\r\n                #inputRepeatPassword\r\n              />\r\n              <div class=\"input-group-addon\">\r\n                <i\r\n                  (click)=\"showRepeatPassword(inputRepeatPassword)\"\r\n                  [class]=\"repeatPasswordEye\"\r\n                ></i>\r\n              </div>\r\n              <div class=\"p-2\">\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    registerForm.controls.passwordRepeat.errors?.required &&\r\n                    registerForm.controls.passwordRepeat.touched\r\n                  \"\r\n                  >Este dato es requerido</span\r\n                >\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    registerForm.controls.passwordRepeat.errors?.notMatch &&\r\n                    registerForm.controls.passwordRepeat.touched\r\n                  \"\r\n                  >Las contraseñas no coinciden</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"user?.role === 'master'\">\r\n            <label for=\"roleSelectInput\">Rol del usuario*</label>\r\n            <select\r\n              formControlName=\"role\"\r\n              class=\"form-control custom-select\"\r\n              id=\"roleSelectInput\"\r\n              s\r\n            >\r\n              <option [value]=\"'no'\">--Seleccionar el rol del usuario--</option>\r\n              <option [value]=\"'admin'\">Admin</option>\r\n              <option [value]=\"'user'\">Usuario final</option>\r\n            </select>\r\n\r\n            <div class=\"p-2\">\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"registerForm.controls.role.errors?.notValue\"\r\n                >Este dato es requerido</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"!user || user?.role !== 'master'\" class=\"form-group\">\r\n            <div class=\"checkbox checkbox-success\">\r\n              <input\r\n                formControlName=\"terminosYCondiciones\"\r\n                id=\"checkbox2\"\r\n                type=\"checkbox\"\r\n              />\r\n              <label for=\"checkbox2\"> Acepto términos y condiciones* </label>\r\n            </div>\r\n            <span\r\n              class=\"text-danger\"\r\n              *ngIf=\"\r\n                !registerForm.controls.terminosYCondiciones.value &&\r\n                registerForm.controls.terminosYCondiciones.touched\r\n              \"\r\n              >Debes aceptar los términos y condiciones antes de empezar</span\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <div class=\"text-center\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-success waves-effect waves-light m-r-10 bgc-primary-dark\"\r\n            >\r\n              Registrarse\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #registerValidationTemplate>\r\n  <h2 class=\"primary-dark\">Validar cuenta</h2>\r\n  <hr />\r\n  <h4 class=\"primary-dark\">¡Solo queda un paso más!</h4>\r\n  <p class=\"primary\">\r\n    Revisá tu casilla de correo electrónico y hace click en el enlace que te\r\n    enviamos para validar tu cuenta. Luego de hacer click se abrirá una nueva\r\n    ventana donde podrás continuar con el registro.\r\n  </p>\r\n  <p class=\"primary\">\r\n    El correo puede tardar unos minutos. Si ves que no llega por favor revisa el\r\n    Spam.\r\n  </p>\r\n  <p class=\"primary\">\r\n    Ante cualquier inconveniente podes escribirnos dejandonos un mensaje en el\r\n    pié de página de nuestra web\r\n  </p>\r\n</ng-template>\r\n"],"sourceRoot":"webpack:///"}