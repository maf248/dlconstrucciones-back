{"version":3,"sources":["./src/app/modules/admin-panel/services/users.service.ts","./src/app/modules/admin-panel/services/projects.service.ts"],"names":[],"mappings":";;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAA2D;;;AAQpD,MAAM,YAAY;IACvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,wEAAW,CAAC,YAAY,QAAQ,CAAC,CAAC;IACzE,CAAC;;wEAXU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAA2D;;;AAQpD,MAAM,eAAe;IAC1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC;;;;;OAKG;IACI,cAAc;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,wEAAW,CAAC,YAAY,WAAW,CACvC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACI,aAAa,CAAC,SAAiB;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,wEAAW,CAAC,YAAY,aAAa,SAAS,EAAE,CACpD,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACI,MAAM,CACX,OAA2B,EAC3B,KAA2B;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,wEAAW,CAAC,YAAY,IAAI,KAAK,SAAS,EAC7C,OAAO,CACR,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACI,IAAI,CACT,EAAU,EACV,OAA2B,EAC3B,KAA2B;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CACpB,GAAG,wEAAW,CAAC,YAAY,IAAI,KAAK,SAAS,EAAE,EAAE,EACjD,OAAO,CACR,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACI,WAAW,CAAC,YAAoB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,wEAAW,CAAC,YAAY,sBAAsB,YAAY,EAAE,EAC/D,EAAE,YAAY,EAAE,MAAM,EAAE,CACzB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACI,qBAAqB,CAAC,QAAgB;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,wEAAW,CAAC,YAAY,oBAAoB,QAAQ,EAAE,EACzD,EAAE,YAAY,EAAE,MAAM,EAAE,CACzB,CAAC;IACJ,CAAC;;8EA1FU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport {\r\n  AllUsersRes,\r\n} from '../interfaces/users.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsersService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Obtiene una lista de todos los usuarios registrados en la app con su información completa.\r\n   *\r\n   * @return {*}  {Observable<AllUsersRes>}\r\n   * @memberof UsersService\r\n   */\r\n  public getAllUsers(): Observable<AllUsersRes> {\r\n    return this.http.get<AllUsersRes>(`${environment.API_BASE_URL}/users`);\r\n  }\r\n}\r\n","import {  HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AdminPanelCrudRoutes } from '../interfaces/general.interface';\r\nimport { ProjectPaymentsReq } from '../interfaces/projects.interface';\r\nimport { AllProjectsRes, OneProjectRes } from '../interfaces/users.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProjectsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Obtiene una lista de todos los proyectos existentes en la app con su información completa.\r\n   *\r\n   * @return {*}  {Observable<AllProjectsRes>}\r\n   * @memberof UsersService\r\n   */\r\n  public getAllProjects(): Observable<AllProjectsRes> {\r\n    return this.http.get<AllProjectsRes>(\r\n      `${environment.API_BASE_URL}/projects`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene el proyecto relacionado al id y el usuario relacionado a ese proyecto.\r\n   *\r\n   * @return {*}  {Observable<OneProjectRes>}\r\n   * @memberof UsersService\r\n   */\r\n  public getOneProject(projectId: number): Observable<OneProjectRes> {\r\n    return this.http.get<OneProjectRes>(\r\n      `${environment.API_BASE_URL}/projects/${projectId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Crea un nuevo registro en la tabla indicada\r\n   *\r\n   * @param payload: FormData\r\n   * @param tabla: AdminPanelCrudRoutes\r\n   * @return {*}  {Observable<any>}\r\n   * @memberof AdminPanelCrudService\r\n   */\r\n  public create(\r\n    payload: ProjectPaymentsReq,\r\n    tabla: AdminPanelCrudRoutes\r\n  ): Observable<any> {\r\n    return this.http.post<any>(\r\n      `${environment.API_BASE_URL}/${tabla}/create`,\r\n      payload\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Edita un registro en la tabla indicada\r\n   *\r\n   * @param id: number\r\n   * @param payload: FormData\r\n   * @return {*}  {Observable<any>}\r\n   * @memberof AdminPanelCrudService\r\n   */\r\n  public edit(\r\n    id: number,\r\n    payload: ProjectPaymentsReq,\r\n    tabla: AdminPanelCrudRoutes\r\n  ): Observable<any> {\r\n    return this.http.patch<any>(\r\n      `${environment.API_BASE_URL}/${tabla}/edit/${id}`,\r\n      payload\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Trae un cashflow de un usuario\r\n   *\r\n   * @param cashflowName: string\r\n   * @return {*}  {Observable<Blob>}\r\n   * @memberof AdminPanelCrudService\r\n   */\r\n  public getCashflow(cashflowName: string): Observable<Blob> {\r\n    return this.http.get(\r\n      `${environment.API_BASE_URL}/projects/cashflow/${cashflowName}`,\r\n      { responseType: 'blob' }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Trae un asset de un proyecto\r\n   *\r\n   * @param fileName: string\r\n   * @return {*}  {Observable<Blob>}\r\n   * @memberof AdminPanelCrudService\r\n   */\r\n  public getAssetsDeUnProyecto(fileName: string): Observable<Blob> {\r\n    return this.http.get(\r\n      `${environment.API_BASE_URL}/projects/assets/${fileName}`,\r\n      { responseType: 'blob' }\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}