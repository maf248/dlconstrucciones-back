{"version":3,"sources":["./src/app/modules/main/pages/lotes/lotes-routing.module.ts","./src/app/modules/admin-panel/pages/lotes/lotes-routing.module.ts","./src/app/modules/admin-panel/pages/lotes/lotes.component.ts","./src/app/modules/admin-panel/pages/lotes/lotes.component.html","./src/app/modules/admin-panel/pages/lotes/lotes.module.ts","./src/app/modules/main/pages/lotes/lotes.component.ts","./src/app/modules/main/pages/lotes/lotes.component.html","./src/app/modules/main/pages/lotes/lotes.module.ts"],"names":[],"mappings":"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","file":"pages-lotes-lotes-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LotesComponent } from './lotes.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LotesComponent\r\n  },\r\n  {\r\n    path: ':loteId',\r\n    loadChildren: () => import('./lote/lote.module').then(m => m.LoteModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LotesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LotesComponent } from './lotes.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: LotesComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LotesRoutingModule { }\r\n","import { Component, Host, HostBinding, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CuerpoTabla } from '../../interfaces/tabla.interface';\r\nimport { HttpService } from '../../../../services/http.service';\r\nimport { takeUntil, finalize } from 'rxjs/operators';\r\nimport {\r\n  Batch,\r\n  Lotes,\r\n  PostalZones,\r\n} from '../../../main/interfaces/http/batches.interface';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal, { SweetAlertResult } from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ZonasDeConstruccion } from '../../interfaces/lotes.interface';\r\nimport { AdminPanelCrudService } from '../../services/admin-panel-crud.service';\r\nimport {\r\n  noConnectionAlert,\r\n  unknownErrorAlert,\r\n  alertFailureOrSuccessOnCRUDAction,\r\n} from '../../../../helpers/alerts';\r\n\r\n@Component({\r\n  selector: 'app-lotes',\r\n  templateUrl: './lotes.component.html',\r\n  styleUrls: ['./lotes.component.scss'],\r\n})\r\nexport class LotesComponent implements OnInit {\r\n  @HostBinding('class.admin-panel-container') someClass: Host = true;\r\n\r\n  public encabezadosTabla: string[] = [\r\n    'Título',\r\n    'Descripción',\r\n    'Precio',\r\n    'Vendido',\r\n  ];\r\n  public tableData: CuerpoTabla[] = [];\r\n  public lotes: Batch[] = [];\r\n  public isCreating: boolean = false;\r\n  public isEditing: boolean = false;\r\n  public crudAction: string = '';\r\n  public zonasDeConstruccion: ZonasDeConstruccion[] = [];\r\n\r\n  // Formulario para crear o editar lotes\r\n  public loteForm!: FormGroup;\r\n\r\n  public imageToShow: string = '../../../../../assets/no-image.png';\r\n  public fileToUpload?: File;\r\n  public acceptedFileTypes: boolean = true;\r\n  public creationImageError: string = '';\r\n\r\n  private loteID!: number;\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    private httpSrv: HttpService,\r\n    private adminPanelCrudService: AdminPanelCrudService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.crearForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLotes();\r\n  }\r\n\r\n  private crearForm(): void {\r\n    this.loteForm = this.fb.group({\r\n      title: ['', [Validators.required, Validators.minLength(6)]],\r\n      description: ['', [Validators.required, Validators.minLength(10)]],\r\n      image: [''],\r\n      price: ['', [Validators.required, Validators.min(1)]],\r\n      sold: ['false'],\r\n      category: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  public showSelectedImage(e: any) {\r\n    if (this.crudAction === 'Crear' && !this.loteForm.controls.image.value) {\r\n      this.creationImageError = 'La imágen es obligatoria';\r\n      return;\r\n    } else {\r\n      this.creationImageError = '';\r\n    }\r\n\r\n    const file = e.target?.files[0];\r\n\r\n    this.acceptedFileTypes =\r\n      file.type === 'image/jpg' ||\r\n      file.type === 'image/jpeg' ||\r\n      file.type === 'image/png';\r\n\r\n    if (file && this.acceptedFileTypes) {\r\n      this.fileToUpload = file;\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => (this.imageToShow = reader.result as string);\r\n    } else {\r\n      this.imageToShow = '../../../../../assets/no-image.png';\r\n    }\r\n  }\r\n\r\n  public formSubmit(): void {\r\n    this.loteForm.markAllAsTouched();\r\n    if (this.crudAction === 'Crear' && !this.loteForm.controls.image.value) {\r\n      this.creationImageError = 'La imágen es obligatoria';\r\n      return;\r\n    }\r\n\r\n    if (this.loteForm.valid) {\r\n      const formData: FormData = new FormData();\r\n      formData.append('title', this.loteForm.controls.title?.value);\r\n      formData.append('description', this.loteForm.controls.description?.value);\r\n      formData.append('price', this.loteForm.controls.price?.value);\r\n      formData.append('sold', this.loteForm.controls.sold?.value);\r\n      this.fileToUpload && formData.append('image', this.fileToUpload!);\r\n      formData.append('category', this.loteForm.controls.category?.value);\r\n\r\n      this.crudAction === 'Crear'\r\n        ? this.crearLoteEnLaDb(formData)\r\n        : this.editarLoteEnLaDb(formData);\r\n    }\r\n  }\r\n\r\n  private getLotes(): void {\r\n    this.httpSrv\r\n      .getAllZones()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (zonas: PostalZones) => {\r\n          for (const zona of zonas.data) {\r\n            this.zonasDeConstruccion.push({\r\n              id: zona.id,\r\n              nombre: zona.title,\r\n            });\r\n            this.httpSrv\r\n              .getLotes(zona.id.toString())\r\n              .pipe(takeUntil(this.destroy$))\r\n              .subscribe(\r\n                (lotes: Lotes) => {\r\n                  if (lotes?.meta?.status.toString().includes('20')) {\r\n                    lotes?.data?.Batches.forEach((lote: Batch) =>\r\n                      this.setTableData(lote)\r\n                    );\r\n                  } else {\r\n                    unknownErrorAlert(lotes);\r\n                  }\r\n                },\r\n                (err) => noConnectionAlert(err)\r\n              );\r\n          }\r\n        },\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  private setTableData(lote: Batch): void {\r\n    this.tableData.push({\r\n      imagen: `${environment.API_IMAGE_URL}/${lote.image}`,\r\n      item2: lote.title ? lote.title : 'Vacío',\r\n      item3: lote.description ? lote.description : 'Vacío',\r\n      item4: lote.price?.toString() ? lote.price?.toString() : 'Vacío',\r\n      item6: this.setearElEstadoVendidoONo(lote.sold),\r\n      id: lote.id,\r\n    });\r\n    this.lotes.push(lote);\r\n  }\r\n\r\n  private setearElEstadoVendidoONo(palabra: string): string {\r\n    let frase = '';\r\n    palabra === 'true' ? (frase = 'Si') : (frase = 'No');\r\n    return frase;\r\n  }\r\n\r\n  public recargarLotes(recargar: boolean): void {\r\n    if (recargar) {\r\n      this.resetsetControls();\r\n      this.tableData = [];\r\n      this.zonasDeConstruccion = [];\r\n      this.lotes = [];\r\n      this.isEditing = false;\r\n      this.isCreating = false;\r\n      this.getLotes();\r\n    }\r\n  }\r\n\r\n  private resetsetControls(): void {\r\n    this.loteForm.controls.title.setValue('');\r\n    this.loteForm.controls.description.setValue('');\r\n    this.loteForm.controls.category.setValue('');\r\n    this.loteForm.controls.price.setValue('');\r\n    this.loteForm.controls.sold.setValue('');\r\n    this.loteForm.controls.image.setValue('');\r\n    this.imageToShow = '../../../../../assets/no-image.png';\r\n  }\r\n\r\n  public creatLote(): void {\r\n    this.crudAction = 'Crear';\r\n    this.isCreating = true;\r\n    this.isEditing = false;\r\n  }\r\n\r\n  private crearLoteEnLaDb(payload: FormData): void {\r\n    this.adminPanelCrudService\r\n      .create(payload, 'batches')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarLotes(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'creó', 'lote');\r\n        },\r\n        (err) => {\r\n          this.recargarLotes(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public editarLote(id: number): void {\r\n    if (this.encontrarLoteSeleccionado(id)) {\r\n      this.crudAction = 'Editar';\r\n      this.isEditing = true;\r\n      this.isCreating = false;\r\n      const lote = this.lotes.find((lote) => lote.id === id);\r\n      if (lote) {\r\n        this.loteID = id;\r\n        this.loteForm.controls.title.setValue(lote.title);\r\n        this.loteForm.controls.description.setValue(lote.description);\r\n        this.loteForm.controls.category.setValue(lote.categories_id);\r\n        this.loteForm.controls.price.setValue(lote.price);\r\n        this.loteForm.controls.sold.setValue(lote.sold);\r\n        this.imageToShow = `${environment.API_IMAGE_URL}/${lote.image}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  private editarLoteEnLaDb(payload: FormData): void {\r\n    this.adminPanelCrudService\r\n      .edit(this.loteID, payload, 'batches')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarLotes(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'editó', 'lote');\r\n        },\r\n        (err) => {\r\n          this.recargarLotes(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public borrarLote(id: number): void {\r\n    if (this.encontrarLoteSeleccionado(id)) {\r\n      Swal.fire({\r\n        title: '¿Seguro querés elimninar el lote seleccionado?',\r\n        showDenyButton: true,\r\n        confirmButtonText: 'Si, borrar',\r\n        denyButtonText: `No`,\r\n      }).then((result: SweetAlertResult<any>) => {\r\n        result.isConfirmed ? this.borrarLoteDeLaDb(id) : null;\r\n      });\r\n    }\r\n  }\r\n\r\n  private borrarLoteDeLaDb(id: number): void {\r\n    this.adminPanelCrudService\r\n      .delete(id, 'batches')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (res) => {\r\n          this.recargarLotes(true);\r\n          alertFailureOrSuccessOnCRUDAction(res, 'borró', 'lote');\r\n        },\r\n        (err) => {\r\n          this.recargarLotes(true);\r\n          noConnectionAlert(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  private encontrarLoteSeleccionado(id: number): Batch | undefined {\r\n    const loteSeleccionado: Batch | undefined = this.lotes.find((lote) => {\r\n      return lote.id === id;\r\n    });\r\n    return loteSeleccionado;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col\" *ngIf=\"!isEditing && !isCreating\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <app-table\r\n          [title]=\"'Lotes'\"\r\n          [filasTabla]=\"tableData\"\r\n          [encabezadosTabla]=\"encabezadosTabla\"\r\n          [totalSection]=\"tableData?.length!\"\r\n          (onRecargar)=\"recargarLotes($event)\"\r\n          (onCreate)=\"creatLote()\"\r\n          (onEdit)=\"editarLote($event)\"\r\n          (onDelete)=\"borrarLote($event)\"\r\n        ></app-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col\" *ngIf=\"isCreating || isEditing\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h1 class=\"primary-dark\">{{ crudAction }} lote</h1>\r\n      </div>\r\n      <form\r\n        class=\"form p-t-20 form-material\"\r\n        [formGroup]=\"loteForm\"\r\n        (ngSubmit)=\"formSubmit()\"\r\n      >\r\n        <div class=\"card-body\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-md-4 mb-2\" (click)=\"imageInput.click()\">\r\n              <img class=\"img-responsive\" [src]=\"imageToShow\" alt=\"Lote\" />\r\n              <input\r\n                [hidden]=\"true\"\r\n                #imageInput\r\n                type=\"file\"\r\n                formControlName=\"image\"\r\n                (change)=\"showSelectedImage($event)\"\r\n              />\r\n              <div class=\"p-2\">\r\n                <span class=\"text-danger\" *ngIf=\"creationImageError\">{{\r\n                  creationImageError\r\n                }}</span>\r\n                <span class=\"text-danger\" *ngIf=\"!acceptedFileTypes\"\r\n                  >Los formatos aceptados son JPG, JPEG y PNG</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Zona de construcción*</label>\r\n            <select\r\n              formControlName=\"category\"\r\n              class=\"form-control custom-select\"\r\n            >\r\n              <option [value]=\"null\">--Seleccionar una zona--</option>\r\n              <option\r\n                *ngFor=\"let zona of zonasDeConstruccion\"\r\n                [value]=\"zona.id\"\r\n              >\r\n                {{ zona.nombre }}\r\n              </option>\r\n            </select>\r\n            <div class=\"p-2\">\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  loteForm.controls.category.errors?.required &&\r\n                  loteForm.controls.category.touched\r\n                \"\r\n                >Este dato es requerido</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"exampleInputuname2\"\r\n                    placeholder=\"Título*\"\r\n                    formControlName=\"title\"\r\n                  />\r\n                  <div class=\"p-2\">\r\n                    <span\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        loteForm.controls.title.errors?.required &&\r\n                        loteForm.controls.title.touched\r\n                      \"\r\n                      >Este dato es requerido</span\r\n                    >\r\n                    <span\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        loteForm.controls.title.errors?.minlength &&\r\n                        loteForm.controls.title.touched\r\n                      \"\r\n                      >Debe tener al menos 6 caracteres</span\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"exampleInputuname2\"\r\n                    placeholder=\"Descripción*\"\r\n                    formControlName=\"description\"\r\n                    rows=\"5\"\r\n                  ></textarea>\r\n                  <div class=\"p-2\">\r\n                    <span\r\n                      *ngIf=\"\r\n                        loteForm.controls.description.errors?.required &&\r\n                        loteForm.controls.description.touched\r\n                      \"\r\n                      class=\"text-danger\"\r\n                      >Este dato es requerido</span\r\n                    >\r\n                    <span\r\n                      *ngIf=\"\r\n                        loteForm.controls.description.errors?.minlength &&\r\n                        loteForm.controls.description.touched\r\n                      \"\r\n                      class=\"text-danger\"\r\n                      >Debe tener al menos 10 caracteres</span\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control\"\r\n                    id=\"exampleInputuname2\"\r\n                    placeholder=\"Precio*\"\r\n                    formControlName=\"price\"\r\n                  />\r\n                  <div class=\"p-2\">\r\n                    <span\r\n                      *ngIf=\"\r\n                        loteForm.controls.price.errors?.required &&\r\n                        loteForm.controls.price.touched\r\n                      \"\r\n                      class=\"text-danger\"\r\n                      >Este dato es requerido</span\r\n                    >\r\n                    <span\r\n                      *ngIf=\"\r\n                        loteForm.controls.price.errors?.min &&\r\n                        loteForm.controls.price.touched\r\n                      \"\r\n                      class=\"text-danger\"\r\n                      >Debe ser mayor a 1</span\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Vendido*</label>\r\n                <select\r\n                  formControlName=\"sold\"\r\n                  class=\"form-control custom-select\"\r\n                >\r\n                  <option [value]=\"'true'\">Si</option>\r\n                  <option [value]=\"'false'\">No</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-success waves-effect waves-light m-r-10 bgc-primary-dark\"\r\n          >\r\n            Confirmar\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"recargarLotes(true)\"\r\n            class=\"btn btn-danger waves-effect waves-light m-r-10\"\r\n          >\r\n            Volver\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LotesRoutingModule } from './lotes-routing.module';\r\nimport { LotesComponent } from './lotes.component';\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LotesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LotesRoutingModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class LotesModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  PostalZones,\r\n  PostalZonesData,\r\n} from '../../interfaces/http/batches.interface';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PresentationCard } from '../../interfaces/presentation-card.interface';\r\nimport { HttpService } from 'src/app/services/http.service';\r\nimport {\r\n  noConnectionAlert,\r\n  unknownErrorAlert,\r\n} from '../../../../helpers/alerts';\r\n\r\n@Component({\r\n  selector: 'app-lotes',\r\n  templateUrl: './lotes.component.html',\r\n  styleUrls: ['./lotes.component.scss'],\r\n})\r\nexport class LotesComponent implements OnInit, OnDestroy {\r\n  private postalZones!: PostalZonesData[];\r\n  public postalZonesToPresent: PresentationCard[] = [];\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(private http: HttpService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeToPostalZones();\r\n  }\r\n\r\n  private subscribeToPostalZones(): void {\r\n    this.http\r\n      .getAllZones()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (pz: PostalZones) => {\r\n          if (pz.meta.status.toString().includes('20')) {\r\n            this.postalZones = pz?.data;\r\n            this.postalZones?.forEach((postalZone) => {\r\n              postalZone.url = `/main/lotes/${postalZone.id}`;\r\n              postalZone.image = `${environment.API_IMAGE_URL}/${postalZone.image}`;\r\n            });\r\n            this.mapPostalZonesToPresent();\r\n          } else {\r\n            unknownErrorAlert(pz);\r\n          }\r\n        },\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  private mapPostalZonesToPresent(): void {\r\n    this.postalZones?.forEach((postalZone) => {\r\n      this.postalZonesToPresent.push({\r\n        titulo: postalZone.title,\r\n        urlFoto: postalZone.image,\r\n        ruta: postalZone.url,\r\n        sendDataByRoute: true,\r\n        urlData: { data: postalZone.id },\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"main-lotes animate__animated animate__fadeIn animate__slow\">\r\n  <h1 class=\"primary-dark\">Lotes</h1>\r\n  <hr />\r\n  <app-presentation-card\r\n    [presentationCard]=\"postalZonesToPresent\"\r\n  ></app-presentation-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LotesRoutingModule } from './lotes-routing.module';\r\nimport { LotesComponent } from './lotes.component';\r\nimport { ComponentsModule } from '../../components/components.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LotesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LotesRoutingModule,\r\n    ComponentsModule\r\n  ]\r\n})\r\nexport class LotesModule { }\r\n"],"sourceRoot":"webpack:///"}