{"version":3,"sources":["./src/app/modules/main/components/wheel-modal/wheel-modal.component.ts","./src/app/modules/main/components/wheel-modal/wheel-modal.component.html","./src/app/services/http.service.ts","./src/app/modules/main/components/presentation-card/presentation-card.component.html","./src/app/modules/main/components/presentation-card/presentation-card.component.ts","./src/app/modules/main/components/components.module.ts"],"names":[],"mappings":"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","file":"default~modules-main-main-module~pages-lotes-lotes-module~pages-servicios-servicios-module~pages-tra~b3772d48.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { HttpService } from 'src/app/services/http.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport {\r\n  Interests,\r\n  InterestsData,\r\n} from '../../interfaces/http/interests.interface';\r\nimport {\r\n  noConnectionAlert,\r\n  unknownErrorAlert,\r\n} from '../../../../helpers/alerts';\r\n\r\n@Component({\r\n  selector: 'app-wheel-modal',\r\n  templateUrl: './wheel-modal.component.html',\r\n  styleUrls: ['./wheel-modal.component.scss'],\r\n})\r\nexport class WheelModalComponent implements OnInit {\r\n  private interestsComplete!: Interests;\r\n  public interestsData: InterestsData[] = [];\r\n\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(private http: HttpService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getInterests();\r\n  }\r\n\r\n  private getInterests(): void {\r\n    this.http\r\n      .getInterests()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(\r\n        (interestsFull: Interests) => {\r\n          interestsFull.meta.status.toString().includes('20')\r\n            ? this.setInterests(interestsFull)\r\n            : unknownErrorAlert();\r\n        },\r\n        (err) => noConnectionAlert(err)\r\n      );\r\n  }\r\n\r\n  private setInterests(interests: Interests): void {\r\n    this.interestsComplete = interests;\r\n    this.interestsData = interests.data;\r\n    this.interestsData?.forEach(\r\n      (interest: InterestsData) =>\r\n        (interest.image = `${environment.API_IMAGE_URL}/${interest.image}`)\r\n    );\r\n  }\r\n}\r\n","<section *ngIf=\"interestsData\">\r\n  <div class=\"\">\r\n    <button\r\n      class=\"\r\n        right-side-toggle\r\n        waves-effect waves-light\r\n        btn-inverse btn btn-circle btn-sm\r\n        pull-right\r\n        m-l-10\r\n        bgc-primary-dark\r\n      \"\r\n      alt=\"default\"\r\n      data-toggle=\"modal\"\r\n      data-target=\"#responsive-modal\"\r\n    >\r\n      <i class=\"ti-settings text-white\"></i>\r\n    </button>\r\n  </div>\r\n  <div\r\n    id=\"responsive-modal\"\r\n    class=\"modal fade\"\r\n    tabindex=\"-1\"\r\n    role=\"dialog\"\r\n    aria-labelledby=\"myModalLabel\"\r\n    style=\"display: none\"\r\n    aria-hidden=\"true\"\r\n  >\r\n    <div class=\"modal-dialog\" *ngFor=\"let interest of interestsData\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title text-center\">{{ interest.title }}</h4>\r\n          <button\r\n            type=\"button\"\r\n            class=\"close btn\"\r\n            data-dismiss=\"modal\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <img class=\"img-responsive\" [src]=\"interest.image\" alt=\"\" />\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <p>\r\n            {{ interest.description }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport {\r\n  BatchComplete,\r\n  Lotes,\r\n  PostalZones,\r\n} from '../modules/main/interfaces/http/batches.interface';\r\nimport { Interests } from '../modules/main/interfaces/http/interests.interface';\r\nimport {\r\n  Job,\r\n  TypesOfJobs,\r\n} from '../modules/main/interfaces/http/jobs.interface';\r\nimport {\r\n  Services,\r\n  TipoServicio,\r\n} from '../modules/main/interfaces/http/services.interface';\r\nimport {\r\n  Contact,\r\n  ContactFormRes,\r\n} from '../modules/main/interfaces/http/contact.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Obtiene las zonas en las cuales se venden lotes y/o construyen casas\r\n   *\r\n   * @return {*}  {Observable<PostalZones>}\r\n   * @memberof HttpService\r\n   */\r\n  public getAllZones(): Observable<PostalZones> {\r\n    return this.http.get<PostalZones>(`${environment.API_BASE_URL}/categories`);\r\n  }\r\n\r\n  /**\r\n   * Obtiene los lotes relacionados a una zona\r\n   *\r\n   * @param zonaId: string\r\n   * @return {*}  {Observable<Lotes>}\r\n   * @memberof HttpService\r\n   */\r\n  public getLotes(zonaId: string): Observable<Lotes> {\r\n    return this.http.get<Lotes>(\r\n      `${environment.API_BASE_URL}/categories/${zonaId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene el detalle de un lote particular\r\n   *\r\n   * @param loteId: string\r\n   * @return {*}  {Observable<BatchComplete>}\r\n   * @memberof HttpService\r\n   */\r\n  public getDetalleLote(loteId: string): Observable<BatchComplete> {\r\n    return this.http.get<BatchComplete>(\r\n      `${environment.API_BASE_URL}/batches/${loteId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los servicios que ofrece la compañía\r\n   *\r\n   * @return {*}  {Observable<Services>}\r\n   * @memberof HttpService\r\n   */\r\n  public getAllServices(): Observable<Services> {\r\n    return this.http.get<Services>(`${environment.API_BASE_URL}/services`);\r\n  }\r\n  public getOneService(id: string): Observable<TipoServicio> {\r\n    return this.http.get<TipoServicio>(\r\n      `${environment.API_BASE_URL}/services/${id}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los trabajos realizados por la compañía\r\n   *\r\n   * @return {*}  {Observable<TypesOfJobs>}\r\n   * @memberof HttpService\r\n   */\r\n  public getTypesOfJob(): Observable<TypesOfJobs> {\r\n    return this.http.get<TypesOfJobs>(`${environment.API_BASE_URL}/types`);\r\n  }\r\n\r\n  /**\r\n   * Obtiene uno de los tipos de trabajo realizados por la compañía\r\n   *\r\n   * @param jobTypeID: string\r\n   * @return {*}  {Observable<Job>}\r\n   * @memberof HttpService\r\n   */\r\n  public getOneTypeOfJob(jobTypeID: string): Observable<Job> {\r\n    return this.http.get<Job>(`${environment.API_BASE_URL}/types/${jobTypeID}`);\r\n  }\r\n\r\n  /**\r\n   * Obtiene los artículos de interés creados por la compañía\r\n   *\r\n   * @return {*}  {Observable<Interests>}\r\n   * @memberof HttpService\r\n   */\r\n  public getInterests(): Observable<Interests> {\r\n    return this.http.get<Interests>(`${environment.API_BASE_URL}/interests`);\r\n  }\r\n\r\n  /**\r\n   * Envía el formulario de contacto\r\n   *\r\n   * @param form: Contact\r\n   * @return {*}  {Observable<ContactFormRes>}\r\n   * @memberof HttpService\r\n   */\r\n  public sendContactForm(form: Contact): Observable<ContactFormRes> {\r\n    return this.http.post<ContactFormRes>(\r\n      `${environment.API_BASE_URL}/contact`,\r\n      form\r\n    );\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div\r\n    class=\"col-lg-4\"\r\n    *ngFor=\"let pCard of presentationCard\"\r\n    (click)=\"pCard.ruta ? navigate(pCard.ruta, pCard) : null\"\r\n  >\r\n    <div class=\"card\" [class.pointer]=\"pCard.ruta\">\r\n      <ng-container *ngIf=\"pCard.vendido === 'true'; else vendidoTemplate\">\r\n        <div class=\"ribbon-wrapper\">\r\n          <div class=\"ribbon bgc-primary-dark text-white text-center\">\r\n            VENDIDO\r\n          </div>\r\n          <img\r\n            class=\"card-img-top img-responsive ribbon-content\"\r\n            [src]=\"pCard.urlFoto\"\r\n            alt=\"Imágen de un servicio\"\r\n          />\r\n        </div>\r\n      </ng-container>\r\n      <ng-template #vendidoTemplate>\r\n        <img\r\n          class=\"card-img-top img-responsive ribbon-content\"\r\n          [src]=\"pCard.urlFoto\"\r\n          alt=\"Imágen de un servicio\"\r\n        />\r\n      </ng-template>\r\n\r\n      <div class=\"card-body\" *ngIf=\"pCard.titulo || pCard.descripcion\">\r\n        <h3 class=\"font-normal text-center\">\r\n          {{ pCard.titulo }}\r\n        </h3>\r\n        <p *ngIf=\"pCard.descripcion\" class=\"m-b-0 m-t-10\">\r\n          {{ pCard.descripcion | slice: 0:40 | titlecase }}\r\n          {{ pCard.descripcion.length > 40 ? \"...\" : \"\" }}\r\n        </p>\r\n        <div class=\"text-center m-t-10\" *ngIf=\"pCard.descripcion\">\r\n          <button class=\"btn waves-effect waves-light bgc-primary-dark\">\r\n            Leer más\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PresentationCard } from '../../interfaces/presentation-card.interface';\r\n\r\n@Component({\r\n  selector: 'app-presentation-card',\r\n  templateUrl: './presentation-card.component.html',\r\n  styleUrls: ['./presentation-card.component.scss'],\r\n})\r\nexport class PresentationCardComponent {\r\n  @ViewChild('image') image!: ElementRef<HTMLImageElement>;\r\n  @Input() presentationCard: PresentationCard[] = [];\r\n\r\n  public showMore: boolean = false;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  public navigate(ruta: string, data: PresentationCard) {\r\n    if (!data.sendDataByRoute) {\r\n      this.router.navigateByUrl(ruta);\r\n    } else {\r\n      this.router.navigateByUrl(ruta, { state: data.urlData });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PresentationCardComponent } from './presentation-card/presentation-card.component';\r\nimport { WheelModalComponent } from './wheel-modal/wheel-modal.component'\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PresentationCardComponent,\r\n    WheelModalComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    PresentationCardComponent,\r\n    WheelModalComponent\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n"],"sourceRoot":"webpack:///"}